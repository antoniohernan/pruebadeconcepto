{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about_acercademi/","title":"Acerca de m\u00ed y mis pruebas de concepto","text":"<p>Antonio Hern\u00e1n</p> Hice de mi fascinaci\u00f3n y pasi\u00f3n por los ordenadores mi profesi\u00f3n. En general, me gusta cualquier cosa que se pueda conectar a la corriente y emita luces o sonidos. Desde hace m\u00e1s de \u00a0veinte a\u00f1os soy t\u00e9cnico de sistemas y por mis manos han pasado los sistemas operativos y plataformas hardware m\u00e1s variopintos. Inconformista por naturaleza, no me gustan las cosas tal como vienen de f\u00e1brica, siempre pienso en optimizar el rendimiento y en c\u00f3mo poder obtener un acceso al int\u00e9rprete en l\u00ednea de comandos, del cual me declara defensor frente a las denominadas \u201cmet\u00e1foras gr\u00e1ficas\u201d. Obsesionado con instalar ScummVM y juegos retro en cualquier cachivache que cae en mis manos. <p>S\u00edgueme en las redes:</p>"},{"location":"about_privacy-policy/","title":"Pol\u00edtica de Privacidad","text":""},{"location":"about_privacy-policy/#quienes-somos","title":"Quienes somos","text":"<p>La direcci\u00f3n de nuestra web es: http://pruebadeconcepto.es.</p>"},{"location":"about_privacy-policy/#que-datos-personales-recogemos-y-por-que-los-recogemos","title":"Qu\u00e9 datos personales recogemos y por qu\u00e9 los recogemos","text":""},{"location":"about_privacy-policy/#comentarios","title":"Comentarios","text":"<p>Cuando los visitantes dejan comentarios en la web, recopilamos los datos que se muestran en el formulario de comentarios, as\u00ed como la direcci\u00f3n IP del visitante y la cadena de agentes de usuario del navegador para ayudar a la detecci\u00f3n de spam.</p> <p>Una cadena an\u00f3nima creada a partir de tu direcci\u00f3n de correo electr\u00f3nico (tambi\u00e9n llamada hash) puede ser proporcionada al servicio de Gravatar para ver si la est\u00e1s usando. La pol\u00edtica de privacidad del servicio Gravatar est\u00e1 disponible aqu\u00ed: https://automattic.com/privacy/. Despu\u00e9s de la aprobaci\u00f3n de tu comentario, la imagen de tu perfil es visible para el p\u00fablico en el contexto de su comentario.</p>"},{"location":"about_privacy-policy/#medios","title":"Medios","text":"<p>Si subes im\u00e1genes a la web deber\u00edas evitar subir im\u00e1genes con datos de ubicaci\u00f3n (GPS EXIF) incluidos. Los visitantes de la web pueden descargar y extraer cualquier dato de localizaci\u00f3n de las im\u00e1genes de la web.</p>"},{"location":"about_privacy-policy/#formularios-de-contacto","title":"Formularios de contacto","text":""},{"location":"about_privacy-policy/#cookies","title":"Cookies","text":"<p>Si dejas un comentario en nuestro sitio puedes elegir guardar tu nombre, direcci\u00f3n de correo electr\u00f3nico y web en cookies. Esto es para tu comodidad, para que no tengas que volver a rellenar tus datos cuando dejes otro comentario. Estas cookies tendr\u00e1n una duraci\u00f3n de un a\u00f1o.</p> <p>Si tienes una cuenta y te conectas a este sitio, instalaremos una cookie temporal para determinar si tu navegador acepta cookies. Esta cookie no contiene datos personales y se elimina al cerrar el navegador.</p> <p>Cuando inicias sesi\u00f3n, tambi\u00e9n instalaremos varias cookies para guardar tu informaci\u00f3n de inicio de sesi\u00f3n y tus opciones de visualizaci\u00f3n de pantalla. Las cookies de inicio de sesi\u00f3n duran dos d\u00edas, y las cookies de opciones de pantalla duran un a\u00f1o. Si seleccionas \"Recordarme\", tu inicio de sesi\u00f3n perdurar\u00e1 durante dos semanas. Si sales de tu cuenta, las cookies de inicio de sesi\u00f3n se eliminar\u00e1n.</p> <p>Si editas o publicas un art\u00edculo se guardar\u00e1 una cookie adicional en tu navegador. Esta cookie no incluye datos personales y simplemente indica el ID del art\u00edculo que acabas de editar. Caduca despu\u00e9s de 1 d\u00eda.</p>"},{"location":"about_privacy-policy/#contenido-incrustado-de-otros-sitios-web","title":"Contenido incrustado de otros sitios web","text":"<p>Los art\u00edculos de este sitio pueden incluir contenido incrustado (por ejemplo, v\u00eddeos, im\u00e1genes, art\u00edculos, etc.). El contenido incrustado de otras web se comporta exactamente de la misma manera que si el visitante hubiera visitado la otra web.</p> <p>Estas web pueden recopilar datos sobre ti, utilizar cookies, incrustar un seguimiento adicional de terceros, y supervisar tu interacci\u00f3n con ese contenido incrustado, incluido el seguimiento de tu interacci\u00f3n con el contenido incrustado si tienes una cuenta y est\u00e1s conectado a esa web.</p>"},{"location":"about_privacy-policy/#analitica","title":"Anal\u00edtica","text":""},{"location":"about_privacy-policy/#con-quien-compartimos-tus-datos","title":"Con qui\u00e9n compartimos tus datos","text":"<p>No comparto datos.  </p>"},{"location":"about_privacy-policy/#cuanto-tiempo-conservamos-tus-datos","title":"Cu\u00e1nto tiempo conservamos tus datos","text":"<p>Si dejas un comentario, el comentario y sus metadatos se conservan indefinidamente. Esto es para que podamos reconocer y aprobar comentarios sucesivos autom\u00e1ticamente en lugar de mantenerlos en una cola de moderaci\u00f3n.</p> <p>De los usuarios que se registran en nuestra web (si los hay), tambi\u00e9n almacenamos la informaci\u00f3n personal que proporcionan en su perfil de usuario. Todos los usuarios pueden ver, editar o eliminar su informaci\u00f3n personal en cualquier momento (excepto que no pueden cambiar su nombre de usuario). Los administradores de la web tambi\u00e9n pueden ver y editar esa informaci\u00f3n.</p>"},{"location":"about_privacy-policy/#que-derechos-tienes-sobre-tus-datos","title":"Qu\u00e9 derechos tienes sobre tus datos","text":"<p>Si tienes una cuenta o has dejado comentarios en esta web, puedes solicitar recibir un archivo de exportaci\u00f3n de los datos personales que tenemos sobre ti, incluyendo cualquier dato que nos hayas proporcionado. Tambi\u00e9n puedes solicitar que eliminemos cualquier dato personal que tengamos sobre ti. Esto no incluye ning\u00fan dato que estemos obligados a conservar con fines administrativos, legales o de seguridad.</p>"},{"location":"gen_hello-world/","title":"Hola Mundo!!! (otra vez)","text":"<p>Y volvemos a la carga con otro blog.</p> <p>Prometo que este va a durar m\u00e1s de.. no se.. tres entradas?? esa es la media de los \u00faltimos cuatro o cinco blogs, tanto personales como las contribuciones con otros medios.</p> <p>Hace muchos a\u00f1os, cuando era podcaster, hab\u00eda unas leyes no escritas donde se defin\u00eda que un podcast tomaba tal entidad cuando ten\u00eda al menos 3 episodios emitidos (no recuerdo si contando o no con el episodio piloto, que sol\u00eda ser un desastre).</p> <p>Ahora pienso que en eso tampoco fui muy constante, mis podcast personales llegaron a poco: uno al piloto, otro a los tres episodios y el podcast de GUM (Grupo de Usuarios MAC) con el que colaboraba lo abandon\u00e9 con 4 episodios... soy un t\u00edo de records!!!</p>"},{"location":"gen_hello-world/#por-que-pruebadeconcepto","title":"\u00bfPor qu\u00e9 pruebadeconcepto?","text":"<p>Con tantos a\u00f1os en este mundillo como llevo vuelvo la vista atr\u00e1s y veo que las mejores ideas, los mejores productos, lo que m\u00e1s me ha gustado hacer y lo que m\u00e1s \u00e9xitos o satisfacciones personales me ha dado siempre ha sido cuando he estado \"cacharreando\", o dicho finamente, haciendo pruebas de concepto, incluso a veces pagadas como tales.</p> <p>En innumerables ocasiones las pruebas de tal tecnolog\u00eda, o tal producto, de esta o aquella configuraci\u00f3n han resultado soluciones que bien han valido las horas invertidas (aunque algunos jefes no lo terminaban de ver as\u00ed, pobres.. \u00bfque ser\u00e1 de ellos??) y que hemos \"estirado\" hasta la saciedad, o incluso hemos visto como fabricantes de los llamados grandes adoptaban como la soluci\u00f3n recomendada, igual o muy similar a la que nuestros \"cacharreos\" sacaban adelante.</p>"},{"location":"gen_hello-world/#y-por-que-nsupdateinfo","title":"\u00bfY por qu\u00e9 nsupdate.info?","text":"<p>Porque es gratis, sin necesidad de entrar cada dos por tres a validar nada, me permite tener esta instancia EC2 (de la free-tier por supuesto) referenciada como veis, incluso con un certificado SSL, y todo por el m\u00f3dico precio de 0\u20ac al a\u00f1o... a ver lo que dura esto arriba.</p> <p>En breve empezamos con las entradas interesantes, que esta como introducci\u00f3n ya no da para m\u00e1s.</p> <p>Para contactar conmigo antonio.hernan AT gmail.com</p>"},{"location":"infv_discossd/","title":"\u00bfY esto tiene discos SSD?","text":"<p>La muerte reciente de Eduardo Punset me ha tra\u00eddo a la cabeza cuando en mi empresa gestion\u00e1bamos uno de sus portales de ayuda. El portal iba, como solemos decir coloquialmente, como el ojete, y vino la t\u00edpica reuni\u00f3n Comerciales-Desarrollo-Sistemas para tirarnos los trastos a la cabeza y localizar al culpable.</p> <p></p> <p>Aparecieron frases c\u00e9lebres, desgastadas por el uso...</p> <p>\"En desarrollo el portal vuela...\" \"En mi entorno local del port\u00e1til va como un tiro...\" \"\u00bfY si le metemos m\u00e1s memoria al servidor? \u00bfle ponemos m\u00e1s CPU?\" \"\u00bfTienen todos los parches?\"</p> <p>T\u00edpicas todas ellas de personas con ninguna o muy poca experiencia que apenas aciertan a copiar y pegar c\u00f3digo encontrado en StackOverFlow.</p> <p>Y entonces soltaron esta, que me hizo saltar del sitio:</p> <p>\"\u00bfPero ese servidor tiene los discos SSD no?\", claro que si majadero, este y todos los de ese CPD, valen m\u00e1s sus cabinas de discos que tus dos ri\u00f1ones vendidos al mercado negro...</p> <p>Efectivamente, era un problema de codificaci\u00f3n (again), que en desarrollo o en local con apenas 10 entradas funciona todo como un avi\u00f3n, pero que en producci\u00f3n con algunas decenas de miles de entradas ese bucle que haces tray\u00e9ndote toda la informaci\u00f3n sin filtrar mata al portal al segundo usuario.</p> <p>Por supuesto que la soluci\u00f3n no sirvi\u00f3 para nada, meses despu\u00e9s con otro portal similar los mismos problemas, el c\u00f3digo era un copia/pega y segu\u00edan ah\u00ed las deficiencias de siempre, no supieron ni reutilizar el c\u00f3digo.</p> <p>Pero esta vez la reuni\u00f3n la empec\u00e9 yo y dej\u00e9 claro que los discos eran SSD, y devolv\u00ed el rev\u00e9s preguntando primero si su aplicaci\u00f3n estaba preparada para soportar tanta velocidad en disco.</p>"},{"location":"infv_guybrush/","title":"\u00a1Hola! Me llamo Guybrush Threepwood, \u00a1y quiero ser un pirata!","text":"<p>Anda que no ha llovido... y eso que Monkey Island no fue ni mucho menos el primer contacto que tuve con un ordenador, pero a buen seguro que fue el que m\u00e1s me marc\u00f3.</p> <p>No tuve la suerte de tener un ZX, ni siquiera un Amstrad, en esto fui unos meses con retraso respecto a los vecinos, un a\u00f1o todo lo m\u00e1s y entr\u00e9 directamente en el mundillo de las computadoras con un MSX, y su correspondiente unidad de cinta Computone (y ese destornillador para ajustar el azimut!!!)</p> <p></p> <p>Fui el rey del barrio, con los cartuchos que cargaban al instante, que de horas con el Kung-Fu Master!!.</p> <p>Luego siguieron equipos m\u00e1s o menos potentes, recuerdo el primer equipo con Intel, un Bondwell 38 de 1986, que ten\u00eda un disco duro de nada menos que 20MB, con eso era el rey del barrio.</p> <p>Hay sonidos y luces que no se olvidan, el arranque de esta m\u00e1quina, con el disco duro que cog\u00eda revoluciones poco a poco y parec\u00eda que la turbina de un avi\u00f3n se hab\u00eda colado en el cuarto, y los destellos y estelas de la pantalla de f\u00f3sforo verde.</p> <p>Recuerdos que est\u00e1n casi a la misma altura que los sonidos de un modem de 9600 baudios (\u00bfbaudios?, los j\u00f3venes que no diferencian un bit de un byte ni saben que eso existe..) y sus luces intermitentes con el cuarto a oscuras, que fueron la mayor\u00eda de mis \"discotecas\" de juventud.</p> <p></p> <p>Los chicos de hoy en d\u00eda, si no tienen equipos que generan miles de millones de tri\u00e1ngulos por segundo y texturas reales... pues no les vale nada.</p> <p>Nunca sabr\u00e1n la relaci\u00f3n de un pollo de goma y una polea, ni disfrutaran de esta maravilla de banda sonora tan de 8bits.</p> <p>Tranquilos, nunca es tarde, si quieres disfrutar de esta aventura gr\u00e1fica y de otras muchas contempor\u00e1neas \u00e9chale un vistazo a ScummVM\u00a0y localiza las Roms.</p> <p>Disfruta!!</p>"},{"location":"rpi_backup/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 5) \u2013 Copias de Seguridad","text":""},{"location":"rpi_backup/#copias-de-seguridad","title":"Copias de seguridad","text":"<p>En este punto tenemos nuestra m\u00e1quina lista y preparada para empezar a meter contenido en ella.</p> <p>Instalar programas, activar funcionalidades, en definitiva, para empezar el cacharreo, as\u00ed que toca pensar en tener\u00a0como m\u00ednimo un punto de restauraci\u00f3n para no tener que volver a realizar todos los trabajos que hemos hecho hasta\u00a0ahora.</p> <p>Adem\u00e1s de todo esto, la copia de seguridad nos va a aportar un plus de tranquilidad, y ya no tendremos tanto miedo\u00a0por tocar este o aquel fichero de configuraci\u00f3n y llevarnos la sorpresa de que nuestra m\u00e1quina no se comporta como\u00a0quer\u00edamos o que simplemente no arranca.</p> <p>Os cuento como hago yo las copias de seguridad, y como siempre digo, esto es s\u00f3lo una parte, y como yo lo hago,\u00a0tomadlo como una base si quer\u00e9is pero no como un dogma.</p> <p>Por desgracia para nosotros los Maqueros, aqu\u00ed no disponemos de nada similar al fant\u00e1stico TimeMachine, as\u00ed que\u00a0debemos implementarlo todo con otros programas y mecanismos (programaci\u00f3n de tareas), adem\u00e1s las copias\u00a0completas ser\u00e1n algo m\u00e1s manuales y a m\u00e1quina parada.</p> <p>Distinguiremos dos tipos de copias de seguridad, las copias en fr\u00edo, o copias completas, donde la m\u00e1quina est\u00e1 parada\u00a0y no se realizan por tanto modificaciones en su contenido, es m\u00e1s, para estas copias deberemos retirar la tarjeta SD\u00a0de la m\u00e1quina.</p> <p>Y las copias en caliente, que realizaremos con la m\u00e1quina en funcionamiento, aunque en ocasiones podamos llegar a\u00a0sufrir algo de degradaci\u00f3n en el rendimiento de nuestra m\u00e1quina por en consumo de disco/cpu de la operaci\u00f3n de\u00a0copia. Estas copias en caliente ser\u00e1n complemento de las anteriores.</p> <p>Explicado un poco mejor, partimos de una copia en fr\u00edo, la cual no es m\u00e1s que un espejo o snapshot de la actual\u00a0informaci\u00f3n de nuestra tarjeta SD, y que se realiza con no mucha asiduidad, ya que implica la parada de la m\u00e1quina.</p> <p>Tenemos por otro lado que a diario, o incluso varias veces a lo largo del d\u00cca, se realizan copias en caliente, las cuales\u00a0adem\u00e1s son incrementales, esto es, se copia todo y luego se copia \u00fanicamente lo que se modifica (realmente se\u00a0copian los bloques de los ficheros que cambian, es la llamada tecnolog\u00eda delta</p> <p>Para restaurar nuestra m\u00e1quina en el \u00faltimo momento antes de un error debemos restaurar la tarjeta con la \u00faltima\u00a0copia de seguridad completa en fr\u00edo que tengamos y luego a\u00f1adirle la informaci\u00f3n del incremental de que\u00a0disponemos.</p>"},{"location":"rpi_backup/#copia-completa-sd-copia-en-frio","title":"Copia completa SD (copia en fr\u00edo)","text":"<p>No se si record\u00e1is la utilidad que os coment\u00e9 en el momento de pasar la imagen del sistema operativo a la SD, Pi\u00a0Filler\u00a0, como os dije ese fabricante tiene otra utilidad llamada Pi Copier\u00a0que hace la operaci\u00f3n inversa, pasar el contenido de la tarjeta a un fichero en\u00a0nuestro disco duro, incluso hace una compresi\u00f3n del fichero de volcado si as\u00ed se lo indicamos.</p> <p>Ambos programas, Pi Filler y Pi Copier est\u00e1n hechos en AppleScript y son f\u00e1cilmente editables, para que ve\u00e1is si\u00a0quer\u00e9is lo que realmente hacen.</p> <p>El uso de Pi Copier es muy sencillo pues s\u00f3lo hay que seleccionar nuestra tarjeta SD e indicar un fichero de destino,\u00a0marcando si queremos que Adem\u00e1s la copia sea posteriormente comprimida y listo,a esperar el resultado.</p> <p>Es posible que queramos hacerlo manualmente, total es hacer la operaci\u00f3n inversa a la de carga de la SD con la\u00a0imagen original.</p> <p>Para esto, volveremos a usar el comando dd cambiando como es l\u00f3gico los par\u00e1metros de entrada y salida de la\u00a0informaci\u00f3n.</p> <p>Este ser\u00eda el comando para volcar nuestra tarjeta SD en nuestra carpeta Descargas:</p> <p>sudo dd bs=1m if=/dev/rdisk1 | gzip &gt; ~/downloads/2014-04-26_Jarvis.img.gz</p> <p>El par\u00e1metro <code>if</code> indica que nuestro origen ser\u00e1 el disco (completo, no particiones) que corresponde a nuestra tarjeta\u00a0SD (en mi caso es este, <code>/dev/rdisk1</code> pues monto con un USB porta SD, recordad como vimos como localizar nuestro\u00a0dispositivo en el mensaje de instalaci\u00f3n de la SD).</p> <p>Y \u00bfel par\u00e1metro de salida?, no est\u00e1, se omite, por que la salida del comando, salida est\u00e1ndar o a pantalla se est\u00e1\u00a0enviando a un comando mediante el uso de ese <code>|</code>, esto es, la salida est\u00e1ndar del comando <code>dd</code> se est\u00e1 empleando\u00a0como entrada est\u00e1ndar del comando <code>gzip</code>\u00a0( es la versi\u00f3n GNU\u00a0de nuestro conocido Zip), y la salida generada por gzip es enviada a un fichero\u00a0mediante el uso de <code>&gt;</code> el cual se encuentra en la carpeta de Descargas (Downloads, recordad que el terminal del\u00a0sistema operativo lo ve todo en ingl\u00e9s...) de la carpeta HOME del usuario, la cual viene indicada por el uso de nuestra\u00a0amiga la virgulilla (~).</p> <p>Importante, el tama\u00f1o del fichero de destino, en caso de no comprimirlo es el mismo que el tama\u00f1o de la tarjeta SD,\u00a0est\u00e9 esta llena o no, si nuestra tarjeta es de 32Gb nuestra imagen en disco ser\u00e1 de esos 32Gb, pues la copia es\u00a0literal, as\u00ed pues, imprescindible comprimirla a no ser que dispongamos de Terabytes libres para regalar.</p>"},{"location":"rpi_backup/#copias-incrementales-copia-en-caliente","title":"Copias incrementales (copia en caliente)","text":"<p>Bien, pues ahora tenemos un punto de partida para poder restaurar nuestra m\u00e1quina, a trav\u00e9s de esas im\u00e1genes\u00a0completas de tarjeta. Estas copias, por lo que tardan y por que debemos detener la m\u00e1quina no las haremos con\u00a0mucha frecuencia, yo en mi caso particular las hago una vez al mes... mes arriba mes abajo XD.</p> <p>Para las copias en caliente yo empleo dos m\u00e9todos, uso Rsync\u00a0 y Dumpcasi indistintamente, si bien rsync es bastante m\u00e1s frecuente y me\u00a0fuerzo a usarlo bastante m\u00e1s regularmente pues es posible hacerlo incluso volcando sobre equipos que est\u00e9n en\u00a0nuestra red (p.e. un NAS)</p> <p>Os voy a contar como opero con Rsync, para tratar de no hacer este tutorial demasiado extenso y dejamos por ahora\u00a0el tema de dump para futuras revisiones de este texto. Adem\u00e1s, como veremos un poco m\u00e1s adelante, el uso de\u00a0rsync nos va a venir muy bien para utilizar nuestra m\u00e1quina como centro de respaldo de nuestros equipos Apple, algo\u00a0as\u00ed como una peque\u00f1a Time Capsule.</p> <p>Necesitamos un pendrive de al menos 4Gb (f\u00e1cil y barato hoy en d\u00eda), el pendrive lo conectamos a uno de los dos\u00a0puertos USB y ser\u00e1 nuestra unidad de respaldo.</p> <p>Este unidad la vamos a montar de manera fija, por tanto no dependeremos de la posibilidad de automontaje que\u00a0luego m\u00e1s adelante veremos.</p> <p>En primer lugar, despu\u00e9s de conectar el pendrive a la m\u00e1quina, debemos identificar que dispositivo se corresponde\u00a0con nuestro pendrive:</p> <p>Con el siguiente comando vemos como el dispositivo est\u00e1 conectado a la m\u00e1quina y que es identificado por esta (en\u00a0mi caso un lector de tarjeta Micro-SD):</p> <p>[root@Jarvis log]# lsusb</p> <p>Bus 001 Device 004: ID 1058:1103 Western Digital Technologies, Inc. My Book Studio Bus 001 Device 005: ID 05e3:0715 Genesys Logic, Inc. USB 2.0 microSD Reader Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. SMSC9512/9514 Fast Ethernet Adapter Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. SMC9512/9514 USB Hub Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</p> <p>Y la mejor manera de ver cual es el dispositivo de nuestro pendrive es guiarnos por la salida del comando fdisk y por\u00a0las capacidades de los \"discos\":</p> <p>[root@Jarvis ~]# fdisk -l</p> <p>Disk /dev/sdb: 3.7 GiB, 3965190144 bytes, 7744512 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x00000000 Device Boot Start End Blocks Id System /dev/sdb1 8192 7744511 3868160 b W95 FAT32</p> <p>Nuestro pendrive es la unidad <code>/dev/sdb</code> y la partici\u00f3n es la 1 (\u00fanica partici\u00f3n por otro lado), est\u00e1 formateado\u00a0sistema de ficheros Fat32, as\u00ed que vamos a hacer lo propio que es crear unas particiones m\u00e1s acordes con el sistema\u00a0operativo con el que estamos tratando y a formatear estas particiones.</p> <p>En concreto crearemos dos, una la vamos a emplear ahora en este paso de copias de seguridad y la otra partici\u00f3n la\u00a0utilizaremos en el siguiente mensaje...</p> <p>Es posible usar el \u201cdisco\u201d en Fat32, y as\u00ed podremos compartir este pendrive entre sistemas, pero esto lo veremos en\u00a0otra ocasi\u00f3n ya que necesitar\u00edamos modificar las opciones de montaje del dispositivo (no vale emplear el defaults en\u00a0fstab) y podemos tener algunos problemas de permisos, por no decir que tendremos la limitaci\u00f3n de tama\u00f1o m\u00e1ximo\u00a0de archivo que tiene Fat32 respecto a ext4.</p> <p>[root@Jarvis ~]# fdisk /dev/sdb</p> <p>Welcome to fdisk (util-linux 2.24.1). Changes will remain in memory only, until you decide to write them. Be careful before using the write command.</p> <p>Orden (m para obtener ayuda): p Disk /dev/sdb: 7,5 GiB, 8017412096 bytes, 15659008 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0xc3072e18 Disposit. Inicio Start Final Blocks Id System /dev/sdb1 2048 15659007 7828480 83 Linux Orden (m para obtener ayuda): d Selected partition 1 Partition 1 has been deleted.</p> <p>Orden (m para obtener ayuda): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended</p> <p>Select (default p): p N\u00famero de partici\u00f3n (1-4, default 1): 1 First sector (2048-15659007, default 2048): Last sector, +sectors or +size{K,M,G,T,P} (2048-15659007, default 15659007): +3G Created a new partition 1 of type 'Linux' and of size 3 GiB.</p> <p>Orden (m para obtener ayuda): n Partition type: p primary (1 primary, 0 extended, 3 free) e extended</p> <p>Select (default p): p N\u00famero de partici\u00f3n (2-4, default 2): 2 First sector (6293504-15659007, default 6293504): Last sector, +sectors or +size{K,M,G,T,P} (6293504-15659007, default 15659007): Created a new partition 2 of type 'Linux' and of size 4,5 GiB.</p> <p>Orden (m para obtener ayuda): p Disk /dev/sdb: 7,5 GiB, 8017412096 bytes, 15659008 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0xc3072e18 Disposit. Inicio Start Final Blocks Id System /dev/sdb1 2048 6293503 3145728 83 Linux /dev/sdb2 6293504 15659007 4682752 83 Linux</p> <p>Orden (m para obtener ayuda): w The partition table has been altered. Calling ioctl() to re-read partition table. Syncing disks.</p> <p>Ahora creamos el FileSystem en esa partici\u00f3n de disco (de tipo ext4 ), y el\u00a0directorio donde montaremos el disco:</p> <p>[root@Jarvis ~]# mkfs -t ext4 /dev/sdb1</p> <p>mke2fs 1.42.8 (20-Jun-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 242400 inodes, 967808 blocks 48390 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=994050048 30 block groups 32768 blocks per group, 32768 fragments per group 8080 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736 Allocating group tables: done Writing inode tables: done Creating journal (16384 blocks): done Writing superblocks and filesystem accounting information: done</p> <p>[root@Jarvis /]# mkdir /BCK</p> <p>Y por \u00faltimo, configuramos el punto de montaje, para lo que debemos editar nuestro fichero <code>/etc/fstab</code> (con VI por\u00a0supuesto) y a\u00f1adir la siguiente l\u00ednea:</p> <p>/dev/sdb1 /BCK ext4 defaults 0 0</p> <p>Para a\u00f1adir esa l\u00ednea, despu\u00e9s de haber tecleado <code>vi /etc/fstab</code>\u00a0pulsamos las teclas SHIFT + G (que nos lleva al final\u00a0del fichero) y una vez all\u00ed pulsamos la tecla o (o min\u00fascula) para a\u00f1adir una nueva l\u00ednea a continuaci\u00f3n de la actual(\u00faltima en nuestro caso) y as\u00ed entramos en modo edici\u00f3n, aqu\u00ed podemos teclear la informaci\u00f3n o usar copiar y pegar\u00a0de la que os he puesto si es que el nombre del dispositivo coincide.</p> <p>En caso de no realizar un nuevo particionamiento y aprovechar lo que tenemos en el pendrive (p.e. Fat32), la l\u00ednea\u00a0que debemos crear en <code>/etc/fstab</code>\u00a0es la siguiente:</p> <p>/dev/sdb1 /BCK vfat user,rw,umask=111,dmask=000 0 0</p> <p>En los siguientes arranques de la m\u00e1quina ese punto de montaje ya estar\u00e1 presente, y si queremos activarlo ahora,\u00a0sin tener que reiniciar recurriremos al comando mount el cual nos montar\u00e1 los recursos pendientes de montaje tal y\u00a0como aparecen en nuestro <code>/etc/fstab</code></p> <p>[root@Jarvis /]# mount -a [root@Jarvis /]# df -kh</p> <p>Filesystem Size Used Avail Use% Mounted on /dev/sdb1 3.6G 7.4M 3.4G 1% /BCK</p> <p>Con la infraestructura necesaria para estas copias incrementales ya operativa vamos a ver los comandos y scripts\u00a0necesarios para hacerla funcionar.</p> <p>Lo primero es instalar rsync que por defecto no est\u00e1 incluido en la instalaci\u00f3n base, para esto:</p> <p>sudo pacman -S rsync</p> <p>El comando para hacer una copia completa de toda nuestra tarjeta sobre el directorio <code>/BCK/Copias</code> del pendrive es\u00a0este:</p> <p>rsync -aAXv /* /BCK --exclude={/dev/*,/proc/*,/sys/*,/tmp/*,/run/*,/mnt/*,/media/*,/lost+found,/BCK/*}</p> <p>Los par\u00e1metros empleados, -aAX son para que la copia sea lo m\u00e1s literal posible en cuanto a permisos, ACLs, etc, as\u00ed\u00a0como para que el copiado se comporte de manera recursiva.</p> <p>En las exclusiones ponemos todos los directorios de los que cuelga el sistema \u201cen vuelo\u201d, esto es, en /proc por\u00a0ejemplo tenemos los procesos que est\u00e1n corriendo, en /tmp los temporales que se pierden tras cada reinicio, etc.</p> <p>Y por supuesto, debemos excluir la propia carpeta de copias, que en este caso est\u00e1 montada bajo / y ser\u00eda tomada en\u00a0cuenta por el /*.</p> <p>Si el comando finaliza bien podemos incorporarlo en un fichero de shell script y programarlo mediante crontab\u00a0para su ejecuci\u00f3n.</p> <p>Para esto, con el usuario root ejecutamos:</p> <p>mkdir -p /home/operador/scripts mkdir -p /home/operador/logs chown operador:operadores /home/operador/scripts vi /home/operador/scripts/CopiaSeg.sh</p> <p>El primer comando,<code>mkdir -p</code> crea el directorio scripts, el modificador -p lo que indica es que se cree toda la</p> <p>estructura de directorios que haga falta.</p> <p>El segundo comando,<code>chown</code>\u00a0es de Change Owner, esto es, cambiar de propietario, el directorio que hemos creado es\u00a0propiedad del usuario root, lo cambiamos para que sea propiedad del usuario operador y del grupo operadores.</p> <p>El contenido del fichero que estamos editando con VI ser\u00e1 este:</p>"},{"location":"rpi_backup/#binbash","title":"!/bin/bash","text":"<p>rsync -aAXv /* /BCK --exclude={/dev/*,/proc/*,/sys/*,/tmp/*,/run/*,/mnt/*,/media/*,/lost+found,/BCK/*} &gt; /dev/null 2&gt;/home/operador/logs/CopiaSeg.log</p> <p>ESC + :wq!</p> <p>Le damos permisos de ejecuci\u00f3n al script con el comando chmod:</p> <p>chmod u+x /home/operador/scripts/CopiaSeg.sh</p> <p>Y por \u00faltimo editamos el crontab del usuario root para ponerlo que se ejecute a diario, todos los d\u00edas de la semana a\u00a0las 23:00 horas.</p> <p>crontab -e</p> <p>0 23 * * * /home/operador/scripts/CopiaSeg.sh</p> <p>Esto es una aproximaci\u00f3n digamos que \u201cdecente\u201d de un sistema de copias de seguridad, menos es nada, y por lo\u00a0menos desde estas copias podr\u00e9is volver a poner el sistema en marcha.</p> <p>En cuando que pueda pondr\u00e9 en la secci\u00f3n \u201cAnexos\u201d de este mensaje alg\u00fan script algo m\u00e1s elaborado respecto a las\u00a0copias de seguridad, para poder tener copias por semanas, manteniendo al menos un mes, etc\u2026 vamos, algo un poco\u00a0mejor que todo esto.</p>"},{"location":"rpi_install_i/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 2) - Instalaci\u00f3n b\u00e1sica (I)","text":""},{"location":"rpi_install_i/#por-donde-empiezo","title":"\u00bfPor donde empiezo?","text":"<p>Lo primero que deber\u00edas pensar es \u00bfque voy a hacer con esto?. No es lo mismo tratar de montar un servidor de WordPress, que un centro multimedia, que un gestor de descargas u otra cosa. Tambi\u00e9n tienes que pensar en la cantidad de tiempo que le quieres dedicar y lo que quieres profundizar en la tarea. Lo mismo que antes, no es lo mismo querer poner una imagen de las del tipo \"todo hecho\" y no perder m\u00e1s que 5 minutos configurando, que hacer una instalaci\u00f3n desde base e ir creando tu, t\u00fa propio entorno. Si quieres, para empezar puedes probar las distribuciones ya hechas y ver que por lo menos esto funciona, y luego ya puedes seguir leyendo el resto donde usar\u00e9 una distribuci\u00f3n algo m\u00e1s compleja.</p>"},{"location":"rpi_install_i/#alternativas","title":"\u00bfAlternativas?","text":"<p>Un mont\u00f3n!!!, y cada d\u00eda m\u00e1s. Tienes distribuciones basadas en BSD, alguna versi\u00f3n de Android y otra muchas basadas en diferentes distribuciones\u00a0de Linux, como son Debian, Arch Linux y Fedora (algo me dejo seguro...) No busques la famosa Ubuntu por que como tal no existe, Cannonical hace tiempo que estableci\u00f3 su m\u00ednimo de\u00a0hardware para las distribuciones de Ubuntu basadas en procesadores ARM\u00a0en los\u00a0micros ARM v7, nuestra Pi es un ARM v6, no hay mucho que hacer.</p> <p>Cada distribuci\u00f3n tiene sus pros y sus contras, e incluso con el tiempo te vuelves un poco \"fan\" de alguna en concreto\u00a0que seguro que no es la mejor en su campo, pero que es con la que mejor te \u00a0desenvuelves. En mi caso, y la que vais a ver a lo largo de todo este texto es ARCH Linux, en su distribuci\u00f3n para microprocesadores ARM (el de\u00a0nuestra Pi, un v6). Para la descarga de la imagen ISO original, nada mejor que la p\u00e1gina de la Fundaci\u00f3n.</p>"},{"location":"rpi_install_i/#y-eso-de-noobs","title":"\u00bfY eso de NOOBS?","text":"<p>Pues esto es relativamente reciente, de Septiembre-Octubre de 2013. (recordad... esto se escribi\u00f3 en 2014!!). Consiste en que te descargas una imagen muy peque\u00f1a, y una vez puesta en la Pi, conectada a red y conectada\u00a0a un teclado y video por HDMI, arranca y se empieza a descargar la imagen definitiva. Algo as\u00ed como los ejecutables de instalaci\u00f3n que se emplean en Windows (argggg), que ocupa muy poco y que\u00a0cuando los ejecutas te das cuenta que se pone a descargar el software real y se pega la tira de tiempo descargando y\u00a0venga a bajar megas y megas. Tambi\u00e9n tienes la opci\u00f3n de utilizar una imagen NOOB que tiene las distribuciones casi completas y no necesita de esta\u00a0descarga. Es una facilidad, muy acertada, que nos dan ahora por si no quieres complicaciones de ning\u00fan tipo. No es que no recomiende su uso, pero a mi estas cosas no me gustan, las cosas que vienen ya hechas o que te lo\u00a0hacen todo ellos y yo no somos muy amigos. No digo que no funcione, por que lo he probado y funciona bastante bien, pero as\u00ed no aprendes nada.</p>"},{"location":"rpi_install_i/#entonces-arch-linuxpor-que","title":"\u00bfEntonces ARCH Linux?\u00bfPor qu\u00e9?","text":"<p>Bien, ARCH es una distribuci\u00f3n que con su sistema de liberaci\u00f3n de paquetes me tiene encantado, es lo que se llama\u00a0un Rolling Release, esto es, seg\u00fan sale un nuevo parche para un componente este se libera y te lo\u00a0individualmente. No tienes por tanto que aguantarte con un problema en un componente como pasa con otras distribuciones,\u00a0llamadas Point Release, que sacan versiones estables cada cierto tiempo (en el caso de Debia hablamos de a\u00f1os...). Por otro lado, esas versiones estables suelen implicar la reinstalaci\u00f3n completa de la tarjeta, mientras que con una\u00a0rolling release instalas la base y luego a base de actualizaciones te mantienes al d\u00eda, bueno, casi, esto es como dir\u00eda\u00a0un f\u00edsico te\u00f3rico, en condiciones ideales de temperatura, presi\u00f3n y en vac\u00edo... Tampoco pens\u00e9is que ARCH es un mundo ideal, son famosas sus meteduras de pata, como cuando dieron el paso\u00a0definitivo para abandonar Init de BSD por systemd, o cuando cambiaron en verano de 2013 el punto de montaje de\u00a0binarios... y m\u00e1s recientemente con los cambios en la distribuci\u00f3n de las particiones del disco (tarjeta SD m\u00e1s bien). En cualquiera de esos casos, si no andas un poco pendiente te puedes encontrar con un sistema in\u00fatil que no arranca. Pero tranquilos, que el apartado de backup / restauraci\u00f3n est\u00e1 un poco m\u00e1s abajo para que durm\u00e1is mejor.</p>"},{"location":"rpi_install_i/#previos-a-la-instalacion","title":"Previos a la instalaci\u00f3n","text":"<p>Nos descargamos la \u00faltima imagen, desde\u00a0aqu\u00ed\u00a0a nuestro equipo. Tenemos nuestra Pi desconectada del adaptador de corriente, conectada a nuestro router por un cable ethernet, y\u00a0nada m\u00e1s, no necesitamos video por el momento, ni siquiera teclado rat\u00f3n, vamos a hacerlo todo por SSH</p> <p>Vas a necesitar acceso a la URL de administraci\u00f3n de tu router, por que necesitas saber que direcci\u00f3n IP ha asignado\u00a0tu DHCP a la MAC de la Pi, eso si no eres como yo, que tengo muy restringida la asignaci\u00f3n de IPs en mi DHCP y soy\u00a0de los que asigna las IPs a mano, para tal MAC tal IP y ni una m\u00e1s. Necesitas tambi\u00e9n un lector de tarjetas SD, si es que tu equipo no tiene uno integrado, como pasa en muchos\u00a0port\u00e1tiles Mac y en los iMac. Yo he usado normalmente un adaptador USB que es como un pendrive, al que se le coloca la SD en un extremo, es\u00a0quiz\u00e1s algo m\u00e1s lento que un lector de tarjetas en condiciones, pero es mucho m\u00e1s c\u00f3modo de usar por sus\u00a0dimensiones. Y necesitas un software para pasar esa imagen Iso que te descargas a la tarjeta SD, yo uso Pi Filler, aunque si no lo quieres usar no te preocupes por que ahora te voy a contar como\u00a0hacerlo usando el Terminal, que no dista mucho a como este programilla lo hace.</p> <p>De este mismo desarrollador ten\u00e9is Pi Copier, que te vuelca (y comprime si lo\u00a0quieres) el contenido de la tarjeta SD a tu disco duro. Una buena opci\u00f3n a estudiar, sobre todo al principio cuando es\u00a0muy f\u00e1cil entre prueba y prueba cargarte toda la instalaci\u00f3n y tener que volver a empezar.</p>"},{"location":"rpi_install_i/#ahora-si-que-si-empezamos","title":"Ahora si que s\u00ed, empezamos","text":"<p>Vamos a pasar la imagen de nuestro sistema operativo, descargado en nuestro disco duro a la tarjeta SD. Antes de continuar, descomprime el .zip del fichero de la imagen, que sin eso no hacemos nada. Ahora, SIN haber puesto la tarjeta SD en el equipo ejectutamos Pi Filler, escogemos la imagen a instalar y nos indica\u00a0que debemos introducir la tarjeta SD, nos la reconocer\u00e1 y nos pregunta cual es (s\u00f3lo te puedes fiar por el nombre,\u00a0cuidado con esto que puedes borrar algo que no es...), una vez aceptadas las pantallas se pone a volcar la imagen en\u00a0la tarjeta y despu\u00e9s de un buen rato, m\u00ednimo media hora, ya estar\u00e1 lista para su uso.</p> <p>Si quieres hacer este mismo proceso por ti mismo, con el terminal de OSX los pasos a dar son estos:</p> <ul> <li>En primer lugar, abre el terminal, bien por que lo ejecutas a partir de tus aplicaciones o bien por que lo inicias desde\u00a0una b\u00fasqueda de Spotligth (CMD + Espacio, teclear terminal y aceptar con intro)</li> <li>Conectas la tarjeta SD al sistema.</li> <li>Identificamos cual es la tarjeta SD que hemos puesto</li> </ul> <pre><code>/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *1.0 TB     disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:                 Apple_APFS Container disk1         1000.0 GB  disk0s2\n\n/dev/disk1\n#: TYPE NAME\n0: FDisk_partition_scheme *32.0 GB\n1: DOS_FAT 32.0 GB\n</code></pre> <ul> <li>Como v\u00e9is, en mi caso mi SD es el disco que est\u00e1 en <code>/dev/disk1</code>. El tama\u00f1o de la tarjeta SD es una muy buena pista para identificarla.</li> <li>Ahora bien, por si ten\u00e9is alguna duda, ejecuntado este comando podr\u00e9is ver donde est\u00e1 montada la tarjeta en el\u00a0sistema de ficheros:</li> </ul> <pre><code>df -kh\nFilesystem Size Used Avail Capacity Mounted on \n/dev/disk0s2 233Gi 208Gi 25Gi 90% /\n...\n/dev/disk1s2 32Gi 17Mi 31Mi 1% /Volumes/Untitled\n</code></pre> <p>Todas las unidades externas en OSX se montan en <code>/Volumes</code>, y ese Untitled que aparece ah\u00ed es el nombre de nuestra tarjeta, que seguramente si est\u00e1 nueva sea ese. El disco es <code>/dev/disk1</code> y <code>s2</code> es el n\u00famero de la partici\u00f3n del disco (la s es de slice), por tanto nuestro disco es <code>/dev/disk1</code>, de la partici\u00f3n nos olvidamos por que al volcar la imagen de la distribuci\u00f3n se crea su propia tabla de particiones (que luego vamos a modificar, por supuesto).</p> <ul> <li>Ahora tenemos que desmontar la tarjeta SD, pero no expulsarla!!. Esto es, vamos a ver c\u00f3mo desaparece la unidad de nuestro escritorio, pero el dispositivo sigue conectado al equipo. <pre><code>sudo diskutil unmountDisk /dev/disk1\n</code></pre></li> </ul> <p>sudo es el comando para la ejecuci\u00f3n de comandos bajo otro usuario, su es de switch user y do de hacer, esto es, hacer con otro usuario. Aqu\u00ed en este comando que os he puesto es ejecutar con el usuario administrador el comando diskutil. Os va a pedir una clave antes de continuar, es la clave del usuario administrador de vuestro equipo.</p> <ul> <li>El comando para grabar la imagen en ese dispositvo es este: <pre><code>sudo dd bs=1m if=&lt;ficheroimagen.img&gt; of=/dev/disk1\n</code></pre></li> </ul> <p>El comando dd toma su nombre de Dataset Definition, y sirve para la manipulaci\u00f3n de la informaci\u00f3n a bajo nivel, para transferir datos, manipular raw data/devices (si, este RAW significa lo mismo que el RAW de las c\u00e1maras de fotos tan de moda \u00faltimamente, acceso en \"crudo\") y realizar algunas conversiones predefinidas. Los par\u00e1metros que pasamos al comando son bs=1m, que indica que use bloques de 1m para la lectura y escritura, if que le indica al comando el fichero (con ruta completa si es necesario) de origen, y of que le indica el destino de los datos, en nuestro caso el dispositivo de la tarjeta SD. Deb\u00e9is reemplazar  por el nombre y ruta de vuestro fichero de imagen, si por ejemplo lo ten\u00e9is en vuestras descargas de usuario tendr\u00e9is dos opciones para hacerlo. <p>La primera es cambiar el directorio actual de trabajo del terminal, en los sistemas OSX, aunque en el navegador de carpetas lo ve\u00e1is todo en castellano, en realidad todo eso \"por debajo\" no son m\u00e1s que carpetas del sistema operativo BSD, que est\u00e1n en ingl\u00e9s. Vuestra carpeta de descargas de usuario estar\u00e1 en <code>~/Downloads</code> El s\u00edmbolo <code>~</code> (si, el gorrinillo de encima de las \u00d1 o virgulilla) se corresponde al caracter ASCII 126 y es un car\u00e1cter reservado que viene a indicar o contener la ruta del directorio HOME del usuario. En los equipos con Windows (arggg) se obtiene manteniendo pulsada la tecla ALT y tecleando 126 en el teclado num\u00e9rico. En los equipos con OSX se obtiene manteniendo pulsada la tecla ALT y pulsando la tecla \u00d1. En mi caso, que mi usuario se llama Nono, mi carpeta de descargas estar\u00e1 en la ruta <code>/Users/Nono/Downloads</code> \u00f3 bien en la ruta <code>~/Downloads</code>.</p> <ul> <li>As\u00ed que, ejecutamos esto para cambiar al directorio <pre><code>cd ~/Downloads\n</code></pre></li> </ul> <p>El comando cd es Change Dir, cambia de directorio, y nos lleva al mismo sitio donde tenemos descargada nuestra\u00a0imagen, si este fichero se llama, por ejemplo <code>archlinux-hf-2013-07-22.img</code>, el comando dd que tenemos que ejecutar\u00a0es este:</p> <pre><code>sudo dd bs=1m if=archlinux-hf-2013-07-22.img of=/dev/disk1\n</code></pre> <p>Si no queremos hacer cambios de directorios y ejecutar el comando dd buscando el fichero de imagen como ruta\u00a0absoluta a nuestras descargas, estemos posicionados donde estemos en el terminal, el comando dd a ejecutar es:</p> <pre><code>sudo dd bs=1m if=~/Downloads/archlinux-hf-2013-07-22.img of=/dev/disk1\n</code></pre> <p>En OSX tenemos posibilidad de acceder al dispositivo tambi\u00e9n por un puntero al mismo en modo RAW, que ya que\u00a0estamos usando dd, que como os he contado es experto en estos desempe\u00f1os, podemos hacer uso de el.</p> <p>Hay quien\u00a0dice que con este tipo de acceso se pueden llegar a tener un 20% m\u00e1s de rendimiento, yo no apreci\u00e9 tanto, aunque si\u00a0que se nota algo.. Para esto, en vez de utilizar el dispositivo /dev/disk1 usamos el de acceso raw /dev/rdisk1, esa r ese raw. Por tanto, el comando dd \"definitivo\" ser\u00eda este:</p> <pre><code>sudo dd bs=1m if=archlinux-hf-2013-07-22.img of=/dev/rdisk1\n</code></pre> <ul> <li>Tan s\u00f3lo resta esperar a la finalizaci\u00f3n del comando dd y expulsar la tarjeta SD del sistema, para la expulsi\u00f3n el\u00a0comando es este:     <pre><code>sudo diskutil eject /dev/disk1\n</code></pre></li> </ul>"},{"location":"rpi_install_i/#encendemos-nuestra-pi-por-primera-vez","title":"Encendemos nuestra Pi por primera vez","text":"<p>Quitamos la SD del equipo y/o adaptador y la ponemos en la ranura de la Pi, conectamos el cable ethernet y le\u00a0ponemos corriente. La m\u00e1quina empieza a arrancar, si la tuvi\u00e9semos conectada por HDMI a un monitor o a nuestra televisi\u00f3n (el arranque\u00a0de un linux en un plasma de 50\" es espectacular XD) ver\u00edamos todo el proceso de arranque, carga de drivers,\u00a0montaje de file system, etc. Tenemos que identificar la direcci\u00f3n IP que nos ha dado el router, ser\u00e1 alguna de nuestra red local, algo en plan\u00a0192.168.1.XXX</p> <p>Vamos a realizar una conexi\u00f3n por el protocolo SSH, esto es, una conexi\u00f3n que lleva una capa de cifrado y se\u00a0comunica al puerto 22 de nuestra Pi, que por defecto en esta distribuci\u00f3n viene abierto, y que un poco m\u00e1s adelante\u00a0podr\u00e9is ver como securizar convenientemente en caso de que lo consider\u00e9is oportuno. Para realizar esta conexi\u00f3n podemos emplear nuestro propio terminal en OSX, pues disponemos de cliente nativo de\u00a0SSH, o bien podemos emplear alg\u00fan tipo de software, de los denominados de terminal, que nos aporte alg\u00fan valor\u00a0a\u00f1adido, como un historial de comandos o una gesti\u00f3n de conexiones.</p> <p>Yo uso habitualmente iTerm2, pero pod\u00e9is usar el terminal del propio Osx para esto, el comando a ejecutar es este:</p> <pre><code>ssh root@192.168.1.20\n</code></pre> <p>Una anotaci\u00f3n sobre las conexiones SSH, cuando realizamos una conexi\u00f3n por primera vez a un sistema nos suele\u00a0aparecer un mensaje en el terminal tal que as\u00ed:</p> <pre><code>The authenticity of host '192.168.1.20 (192.168.1.20)' can't be established.\nRSA key fingerprint is 91:2d:b5:60:8a:17:60:4e:62:37:d2:ce:ea:94:7f:65.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.1.20' (RSA) to the list of known hosts.\n</code></pre> <p>Tenemos que decir yes, que aceptamos que se guarde la huella RSA para ese servidor en nuestra lista de equipos conocidos. Y esta informaci\u00f3n se guarda en el fichero known_hosts que tenemos en el directorio <code>.ssh</code> de nuestro home de usuario <code>~/.ssh</code>. \u00bfPor que os cuento esto?, pues por que esa IP, nombre de m\u00e1quina y huella de clave RSA se almacenan ah\u00ed donde os digo y en caso de hacer una reinstalaci\u00f3n de la tarjeta SD (lo har\u00e1s tarde o temprano.. al tiempo) esta informaci\u00f3n cambia. Cuando trat\u00e9is de hacer una conexi\u00f3n SSH a la nueva/reci\u00e9n formateada Pi se har\u00e1 un lio tremendo entre lo antiguo y lo nuevo y ver\u00e9is como directamente la conexi\u00f3n SSH se cierra. Es m\u00e1s, es posible que os llegue a salir un aviso en pantalla acerca de un posible ataque del tipo \u201cMan in the Middle\u201d, como esto:</p> <pre><code>@@@@@@@@@@@\nWARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!\n@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the RSA key sent by the remote host is\n32:e5:d9:77:59:79:f3:83:3f:d6:19:76:b7:00:f4:c1.\nPlease contact your system administrator.\nAdd correct host key in /Users/Nono/.ssh/known_hosts to get rid of this message.\nOffending RSA key in /Users/Nono/.ssh/known_hosts:1\nRSA host key for 192.168.1.20 has changed and you have requested strict checking.\nHost key verification failed.\n</code></pre> <p>\u00bfSoluci\u00f3n?, modificar o eliminar este fichero, si eliminar, no pasa nada, se volver\u00e1 a generar y llenar de contenido en las siguientes conexiones. As\u00ed que, si reinstalas tu Pi y ves que no puedes conectar con ella por SSH, y que esta conexi\u00f3n se cierra al instante  prueba esto:</p> <pre><code>rm ~/.ssh/known_hosts\n</code></pre> <p>El comando <code>rm</code> toma su nombre de Remove, elimina ese fichero, es un comando PELIGROSO ya que no tiene marcha\u00a0atr\u00e1s, no existe un unrm... lo que borres borrado est\u00e1, adem\u00e1s este comando puede tomar a trav\u00e9s de sus\u00a0par\u00e1metros un mont\u00f3n de opciones que hagan que su comportamiento sea letal, como <code>-fr</code> (f = force r=recursive,\u00a0borra recursivamente sin confirmaci\u00f3n), todo un HitParade entre los becarios de administraci\u00f3n de sistemas, y que\u00a0tire la primera piedra el que nunca se le haya escapado uno y la haya liado parda... Si te da miendo usar este comando puedes tratar de mover el fichero, si mover, por que en Unix/Linux no existe un\u00a0comando que renombre elementos, existe un comando que los mueve.</p> <pre><code>mv ~./ssh/known_hosts ~./ssh/known_hosts.old\n</code></pre> <p>El comando mv es de Move, y lo que hace es que mueve el fichero known_hosts a otro destino, que es el fichero\u00a0known_hosts.old. Retomamos nuestra instalaci\u00f3n, perd\u00f3n por la dispersi\u00f3n, pero creo que es bueno ir de vez en cuando soltando cosas\u00a0de estas en plan culturilla general, que son las que m\u00e1s te hacen aprender. Hemos abierto una conexi\u00f3n SSH, hemos autorizado a que se almacene en local la huella de la clave RSA de nuestra\u00a0PI y nos est\u00e1 pidiendo la clave del usuario root, que es el que hemos configurador en la conexi\u00f3n. \u00bfQue clave?, la de por defecto, luego la cambiamos, es root</p>"},{"location":"rpi_install_i/#pantalla-negra-letras-blancas-tu-tienes-el-poder","title":"Pantalla negra letras blancas, tu tienes el poder","text":"<pre><code>[root@alarmpi ~]#\n</code></pre> <p>Con estos caracteres tu Pi te da la bienvenida al mundo del cacharreo. \u00bfDecepcionado verdad?, espera, que te explico la cantidad de informaci\u00f3n que te est\u00e1 dando con esa l\u00ednea\u00a0aparentemente tan simple. root = nos informa del usuario con el que estamos interactuando en esta sesi\u00f3n, en breve vemos como crear m\u00e1s\u00a0usuarios y esta informaci\u00f3n te ser\u00e1 de utilidad, as\u00ed sabes que estas ejecutando y con que usuario. alarmpi = el nombre de nuestra m\u00e1quina, as\u00ed sabes a que m\u00e1quina te has conectado. \u00bfPero si s\u00f3lo tengo una?, si, tu\u00a0si, pero yo a d\u00eda de hoy administro administraba entorno a los 200 servidores, vital saber el cual est\u00e1s. En breve\u00a0vemos como cambiar el nombre a nuestra m\u00e1quina, ante todo personalidad propia!!. ~ = nuestra amiga la virgulilla aparece de nuevo, nos indica que estamos en el directorio HOME de este usuario. Si\u00a0hacemos referencia en un cd (change directory, cambio de directorio) a ~ nos llevar\u00e1 a este directorio o bien lo\u00a0emplear\u00e1 para componer la ruta relativa us\u00e1ndolo como base, es lo mismo que emplear la varible de entorno $HOME\u00a0(las variables se referencia as\u00ed, con un $ por delante). Esta informaci\u00f3n es muy util pues en cuanto que cambiemos\u00a0de directorio aqu\u00ed nos aparecer\u00e1 el nombre del directorio (sin ruta) en el que nos encontramos (que ser\u00eda lo mismo\u00a0que consultar la variable de entorno $PWD, \u00f3 Process Working Directory, o ejecutar el comando pwd que nos da esta\u00a0misma informaci\u00f3n). # = esto nos indica que tenemos la shell como root, nuevamente en entornos monousuario que s\u00f3lo tenemos root no\u00a0nos aporta nada, pero cuando tenemos varios usuarios es importante porque, con usuarios que no son UID 0\u00a0(administradores, como nuestro root) el s\u00edmbolo que veremos es un $.</p> <p>\u00bfQue diferencia hay con la shell de root y la de\u00a0otro usuario?, pensad en aquel <code>-fr</code> del comando <code>rm</code>, y ahora lo junt\u00e1is con una shell privilegiada, si... la aniquilaci\u00f3n\u00a0de todo fichero de tu instalaci\u00f3n... \u00bfA que mola tener el poder?? mu ha ha ha... Toda esta informaci\u00f3n que se nos muestra es completamente personalizable, para ello podemos modificar en nuestro\u00a0fichero de perfil de shell (<code>.profile</code>, <code>.bash_profile</code> o en los esqueletos de usuarios para hacerlo general a todos los\u00a0nuevos usuarios) el valor de las variables de entorno <code>$PS1</code> y <code>$PS2</code>, las llamadas Prompt String.</p> <p>No quiero hacer esta\u00a0gu\u00eda interminable as\u00ed que voy a omitir estas configuraciones, si alguien est\u00e1 interesado en ello que me lo pregunte,\u00a0que con mucho gusto le cuento como modificarlo.</p>"},{"location":"rpi_install_i/#nos-ponemos-al-dia","title":"Nos ponemos al d\u00eda","text":"<p>Antes de empezar a hacer m\u00e1s cosas, vamos a actualizar nuestro sistema para ponerlo a la \u00faltima. Recordad, estamos en una distribuci\u00f3n Rolling Release, as\u00ed que vamos a decirle al sistema que mire que es lo que\u00a0tiene instalado, busque en los repositosio las actualizaciones y nos las instale.</p> <pre><code>[root@alarmpi ~]# pacman -Syu\n</code></pre> <p>pacman es el comando para manejar y administrar paquetes de software, con el podr\u00e1s instalar, actualizar, eliminar y\u00a0listar el software que tienes instalado. Con los par\u00e1metros -Syu le indicamos la forma de comportarse, en este caso es S = sincroniza paquetes, y = refresca\u00a0la descarga del paquete desde el repositorio, es lo mismo que usar --refresh, y u = actualizar todos los paquetes que\u00a0est\u00e1n fuera de fecha, es lo mismo que usar el par\u00e1metro <code>--sysupgrade</code> Veremos como el sistema comprueba todos los paquetes y nos solicita confirmaci\u00f3n para realizar la actualizaci\u00f3n.\u00a0La primera vez lleva un tiempo. Finalizada la actualizaci\u00f3n debemos reiniciar la m\u00e1quina para que se carguen todos los paquetes nuevos/actualizados\u00a0correctamente.</p> <pre><code>[root@alarmpi ~]# sync\n[root@alarmpi ~]# reboot\n</code></pre> <p>El comando sync lo que hace es volcar a disco toda la informaci\u00f3n que puedan contener los buffers de memoria y que\u00a0a\u00fan no se han fijado en fichero. Es por decirlo en lenguaje m\u00e1s plano, salvar a disco lo que est\u00e1 en vuelo o en\u00a0memoria de la m\u00e1quina. El comando reboot lo que hace es un apagado y posterior inicio de nuestra m\u00e1quina. Podemos hacerlo de m\u00e1s\u00a0maneras, usando por ejemplo el comando <code>shutdown -r</code> o el propio systemd nos permite reiniciar con el comando\u00a0<code>systemctl reboot</code>.</p> <p>Alguna vez he visto diferencias entre ambos, aparte de la evidente que shutdown tiene por defecto un periodo de tiempo de gracia durante el cual puedes interrumpir la parada (con <code>shutdown -c</code>), pero son cosas\u00a0relativamente espec\u00edficas al sistema operativo, tal como esto que os dec\u00eda de sync, que pueda ser invocado por el\u00a0comando de reinicio, desconexiones y parada de servicios, etc. No quiero entretenerme demasiado.</p>"},{"location":"rpi_install_i/#un-toque-personal","title":"Un toque personal","text":"<p>Nuestra m\u00e1quina ya est\u00e1 casi lista para empezar a hacer tareas de las \"divertidas\", antes de seguir, vamos a darle un\u00a0poco de toque personal, hay unas cuantas cosas que no est\u00e1n configuradas o que si lo est\u00e1n es con los valores por\u00a0defecto y esto no me gusta.</p> <ul> <li>En primer lugar, la clave del administrador:</li> </ul> <pre><code>[root@alarmpi ~]# passwd root\nEnter new UNIX password:\nRetype new UNIX password:\npasswd: password updated successfully\n</code></pre> <p>El comando passwd nos permite cambiar la clave, se nos solicita dos veces y no se muestra en pantalla. No recuerdo bien si esta clave tiene pol\u00edtica de caracteres, en plan m\u00ednimo 8 caracteres, al menos una may\u00fascula, un\u00a0d\u00edgito num\u00e9rico, un car\u00e1cter raruno como #$%&amp; y que no se haya repetido la clave en los \u00faltimos cambios.. etc etc.. La verdad es que suelo usar una clave m\u00e1s o menos compleja que harto de estas exigencias las cumple todas y una\u00a0parte de la clave es variable para evitar repetir en futuros cambios. Lo dicho, pon\u00e9is la clave nueva que quer\u00e1is.</p> <ul> <li>Cambiamos la configuraci\u00f3n de zona horaria</li> </ul> <pre><code>[root@alarmpi etc]# echo \"Europe/Madrid\" &gt; /etc/timezone\n</code></pre> <p>Os explico. El comando echo lo que hace es imprimir en la salida estandar lo que le digamos, hace un \"eco\". \u00bfSalida estandar?, bien os amplio la informaci\u00f3n, sin nervios. Est\u00e1is tratando con un sistema operativo de verdad, no aquellos juguetes de Ms-DOS (argggg), aqu\u00ed ten\u00e9is una\u00a0entrada estandar (por defecto teclado) y DOS salidas, la estandar (\u00f3 salida 1) y la de errores (\u00f3 salida 2), ambas se\u00a0imprimen en pantalla por defecto. Con los s\u00edmbolos &gt; &lt; | pod\u00e9is manejar y redireccionar las entradas/salidas a vuestro antojo, entrada, salida y pipe o\u00a0tuber\u00eda. En este caso, el del comando echo, lo que hacemos es que la salida estandar, que es la pantalla (\u00f3 salida 1, solo que\u00a0el 1 siempre se omite) es redireccionada a algo, en este caso a un fichero, por tanto TODO lo que ese comando echo\u00a0vaya a mostrar la pantalla se va a grabar en ese fichero, salvo lo que vaya dirigido a pantalla y que est\u00e9 por la salida\u00a0de errores. Existe otro formato de redireci\u00f3n, que es &gt;&gt; , con este lo que indicamos es que si el destino de nuestra salida existe\u00a0no lo machaque, sino que a\u00f1ada contenido. \u00bfY la salida de errores?, pues bien, los comandos en Unix/Lnx muestran informaci\u00f3n por las dos salidas, por la\u00a0estandar y por la de errores, ambas por defecto aparecen en pantalla, pero nosotros podemos diferenciarlos y\u00a0reconducir una, otra o ambas a donde queramos. Por ejemplo si un comando lo tratamos para que su salida sea as\u00ed <code>&gt; /var/log/ejecucion.log 2&gt; /var/log/errores.log</code> tendremos que en pantalla no vemos nada (se puede solucionar con tee) pero se generan dos ficheros, uno,\u00a0ejecuci\u00f3n.log tiene la salida estandar, y el otro, errores.log tiene los errores del proceso.</p> <p>De esta manera podemos\u00a0consultar el fichero de errores, que puede tener pocas o ninguna l\u00ednea sin necesidad de validar un \u00fanico archivo de\u00a0miles de l\u00edneas. Tambi\u00e9n podemo decidir unificar ambas salidas, para tener tanto la salida como el error en el mismo fichero, para\u00a0esto, la redirecci\u00f3n ser\u00eda as\u00ed <code>&gt; /var/log/ejecucion.log 2&gt;&amp;1</code>, con ese &amp;1 indicamos que todo lo que vaya a la salida 2\u00a0(errores) sea enviado junto con la salida 1 (estandar), y por tanto al mismo fichero. Y otra cosa, que se suele usar mucho, en muchos casos queremos que se ejecute un proceso/programa, pero que nonos deje rastro del posible error.</p> <p>Imaginad que lanz\u00e1is un borrado de ficheros residuales, si existen el comando de\u00a0borrado los elimina, salida de errores 0, pero si no existe saca error por la salida de errores, aunque a nosotros no\u00a0nos importa, si hay borras, si no hay pues vale. Para eso, enviamos la salida de errores a un dispositivo muy especial y entra\u00f1able /dev/null, siendo el comando algo\u00a0as\u00ed <code>rm *.kk 2 &gt; /dev/null</code>\u00a0. Me borras todo lo que sea .kk y en caso de error (salida 2) me env\u00edas toda esa informaci\u00f3n al dispositivo /dev/null,\u00a0que para que os hag\u00e1is una idea es como la alfombra que se levanta para meter lo que barres del suelo y all\u00ed se\u00a0queda, desaparece s\u00f3lo.</p> <ul> <li>Continuamos con la personalizaci\u00f3n, perd\u00f3n por el tost\u00f3n, a veces me cuesta contenerme. <pre><code>[root@alarmpi ~]# rm /etc/localtime\n[root@alarmpi ~\\# ln -s /usr/share/zoneinfo/Europe/Madrid /etc/localtime\n</code></pre></li> </ul> <p>Borramos el enlace <code>/etc/localime</code> y lo volvemos a crear. \u00bfQue es un enlace?, pues un puntero a otro fichero/directorio en nuestro sistema. Si lo borramos estamos borrando solamente el enlace, no el destino del puntero, y si borramos el destino del puntero nuestro enlace se queda \"colgado\" (seg\u00fan el tipo de terminal y su configuraci\u00f3n de visualizaci\u00f3n, podr\u00e1s llegar a ver los enlaces colgados parpadeando en pantalla). Con el comando ln creamos un link o enlace, con el modificador -s le indicamos que es un enlace de los denominados suaves, damos el destino del enlace y el nombre del mismo.</p> <ul> <li>Ahora modificamos las \u201clocales\u201d</li> </ul> <p>M\u00e1s bien las generamos para poder tener soporte completo a todo nuestros juego de\u00a0caracteres, incluidas las \u00d1s y todas las vocales acentuadas. Para hacer esto, los pasos son tres: </p> <p>1.- Editar el fichero <code>/etc/locale.gen</code> para eliminar el comentario (<code>#</code>) de las l\u00edneas que contienen los juegos de caracteres en espa\u00f1ol (<code>#es_ES@euro ISO-8859-15</code> y <code>#es_ES.UTF-8 UTF-8</code>)</p> <pre><code>[root@alarmpi ~]# vi /etc/locale.gen\n(Pulsar la tecla / shift + 7, y teclear la cadena a buscar, en este caso `es_ES` no lleva a la primera l\u00ednea que lo\ncontiene)\n#es_ES.UTF-8 UTF-8\n#es_ES@euro ISO-8859-15\n(Sobre la # de estas dos l\u00edneas pulsamos la tecla x (x min\u00fascula) para eliminar ese car\u00e1cter)\nESC + :wq!\n</code></pre> <p>2.- Generar las locales, mediante el comando locale-gen <pre><code>[root@alarmpi ~]# locale-gen\nGenerating locales...\nes_ES.UTF-8\nes_ES.ISO-8859-15\nGeneration complete.\n</code></pre></p> <p>3.- Configurar nuestro sistema para usar las locales generadas, editando y/o creando el fichero /etc/locale.conf <pre><code>[root@alarmpi ~]# vi /etc/locale.conf\nLANG=es_ES.UTF-8\nLC_MESSAGES=es_ES.UTF-8\nESC + :wq!\n</code></pre></p> <p>Si queremos estar seguro que tenemos las locales y el juego de caracteres correcto, en el siguiente reinicio de  m\u00e1quina podemos emplear el comando locale para ver una salida del comando similar a esto:</p> <pre><code>[root@ alarmpi ~]# localectl status\nSystem Locale: LANG=es_ES.UTF-8\nVC Keymap: n/a\nX11 Layout: n/a\n</code></pre> <p>4.- Y configuramos la distribuci\u00f3n de las teclas para el posible uso de un teclado USB conectado a la m\u00e1quina. <pre><code>[root@alarmpi ~]# echo \u201cKEYMAP=mac-euro2\u201d &gt; /etc/vconsole.conf [root@alarmpi ~]# localectl set-keymap mac-euro2\n[root@alarmpi ~]# localectl status\nSystem Locale: LANG=es_ES.UTF-8 \n    VC Keymap: mac-euro2\n   X11 Layout: es X11 Model: pc105\n  X11 Options: terminate:ctrl_alt_bksp\n</code></pre></p> <p>... Seguimos en el siguiente mensaje ...</p>"},{"location":"rpi_install_ii/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 3) \u2013 Instalaci\u00f3n b\u00e1sica (II)","text":""},{"location":"rpi_install_ii/#continuamos-con-la-personalizacion","title":"\u2026 Continuamos con la personalizaci\u00f3n","text":"<p>Y ya, para terminar de personalizar nuestra m\u00e1quina vamos a cambiarle el nombre, \u00bfalarmpi? a quien se le ese nombre, con la de cosas bonitas y frikis que hay para usar, toda la saga de ESDLA est\u00e1 llena de nombres m\u00e1quinas, el mundo del comic, de las novelas de Sci-Fi, o puedes usar los socorridos nombres de familiares mascotas... el nombrar o bautizar m\u00e1quinas es un arte ;)</p> <pre><code>[root@alarmpi etc]# vi /etc/hostame\nJarvis\n</code></pre> <p>Con esto editamos el fichero donde est\u00e1 el nombre de nuestra m\u00e1quina. Sobre el editor VI os podr\u00eda contar mucho, pero para este caso os doy un peque\u00f1o gui\u00f3n y si os pica la dud\u00e9is consultar esta p\u00e1gina o esta otra. Despu\u00e9s de pulsar intro al final del comando <code>vi /etc/hostname</code> tendreis el editor abierto con una l\u00ednea que dice <code>_alarmpi_</code>. Borramos esta l\u00ednea, pulsando dos veces la tecla d <code>dd</code>, la l\u00ednea desaparece. Ahora insertamos el nuevo texto, pulsmos la tecla i <code>i</code>, y teclamos el nombre de nuestra m\u00e1quina. Termina la edici\u00f3n volvemos al modo de comando del editor pulsando la tecla ESC. Y ejecutamos el comando del editor que nos salva el fichero y finaliza la edici\u00f3n <code>:wq!</code></p> <p>Como hemos cambiado el nombre de la m\u00e1quina, debemos cambiar tambi\u00e9n la configuraci\u00f3n del fichero de direcciones locales, de manera que cuando hagamos referencia a nuestro nuevo nombre de m\u00e1quina, el sistema sea capaz de encontrarse a si mismo.</p> <pre><code>[root@alarmpi etc]# vi hosts\n#\n# /etc/hosts: static lookup table for host names\n#\n#&lt;ip-address&gt; &lt;hostname.domain.org&gt; &lt;hostname&gt;\n127.0.0.1 localhost.localdomain localhost Jarvis\n::1 localhost.localdomain localhost Jarvis\n# End of file\n</code></pre> <p>Nuevamente recurrimos a VI. Nos desplazamos con los cursores hasta el espacio que hay detr\u00e1s de localhost, vamos a borrar todo lo que existe en esa l\u00ednea desde ese punto hasta el final. Para eso, la combinaci\u00f3n de teclas es <code>SHIFT + d</code>. Y ahora a\u00f1adimos al final de la l\u00ednea, el comando que nos habilita la edici\u00f3n al final de l\u00ednea es <code>SHIFT + a</code>. Estando en modo edicion tecleamos el nombre nuevo de nuestra m\u00e1quina y para volver a modo de comando pulsamos ESC. Nos vamos a la otra l\u00ednea y repetimos la misma operaci\u00f3n. Y para salvar, como os he dicho antes, ESC y luego <code>:wq!</code></p> <p>Un reinicio de la m\u00e1quina para que se refresquen estos cambios y ahora entramos en palabras mayores, que vamos a tocar la tabla de particiones de la tarjeta.</p> <pre><code>[root@alarmpi ~]# sync\n[root@alarmpi ~]# reboot\n</code></pre>"},{"location":"rpi_install_ii/#particionamiento-y-redimensionamiento-de-sd","title":"Particionamiento y redimensionamiento de SD","text":"<p>Por defecto, las im\u00e1genes de las distribuciones (no se si con NOOB es igual) vienen para tarjetas de 4Gb, nosotros es muy posible que tengamos una tarjeta m\u00e1s grande, 8, 16 o 32Gb. Vamos a cambiar la tabla de particiones para que se pueda aprovechar todo es espacio, y de paso vamos a hacer una cosa muy importante que es crear una zona de Swap. Para el particionamiento yo soy muy mani\u00e1tico, me gusta crear cada file system cr\u00edtico en su lugar, para evitar que te crezcan descontroladamente si no los creas as\u00ed, como file system y los dejas como directorios. Por ejemplo, si creas un FS (file system) para el raiz de la m\u00e1quina <code>/</code> y en este existe el directorio <code>/var/log</code> (que es donde suelen ir todos los logs del sistema) no sabr\u00e1s de una manera r\u00e1pida y clara si el contenido de ese directorio crece de manera inusual, tampoco tendr\u00e1s posibilidades de maniobrar ampliando si se da el caso. En cambio, si creas un FS para <code>/</code> y otro FS para <code>/var/log</code> ambos puntos de montaje son independientes y puedes ampliar llegado el caso el de log y controlarlo de un simple vistazo. De todas maneras, todo esto es mucho, pero que mucho m\u00e1s manejable si en vez de hacerlo as\u00ed empleamos LVM (Logical Volumen Manager), el cual nos permite agrupar el almacenamiento y crear vol\u00famenes l\u00f3gicos, si veo que no me sale una gu\u00eda excesivamente grande no descarto contar algo de LVM de cara sobre todo al almacenamiento externo. Para este caso y casi todo lo que voy a contar en la guia, con un particionamiento m\u00e1s o menos rudimenatario puede valer, esto es, dando todo el espacio que nos sea posible a la raiz del sistema (<code>/</code>) y generando una peque\u00f1a \u00e1rea para la zona de swap que ahora despu\u00e9s os comentar\u00e9. La modificaci\u00f3n de la tabla de particiones es una tarea cr\u00edtica, un error y no arranc\u00e1is, as\u00ed que si has pensado en hacer un clonado de tu SD, este es el momento, recordad aquel programa, Pi Copier que os coment\u00e9.</p> <p>Vamos a particionar, para esto, conectados a nuestra Pi por SSH con el usuario root utilizamos el comando <code>fdisk</code>(Fixed Disk Setup), y tenemos que indicarle a este programa cual es el dispositivo que apunta a nuestra tarjeta SD. Con el comando <code>df -kh</code> que os indiqu\u00e9 antes podr\u00e9is ver en que dispositivo est\u00e1n montadas las particiones y sus FileSystem, ya os lo digo yo, es /dev/mmcblk0 Todo lo que os pongo a continuaci\u00f3n es espec\u00edfico de un ARCH Linux, de una imagen reciente (a partir de Septiembre de 2013).</p> <pre><code>fdisk /dev/mmcblk0\nWelcome to fdisk (util-linux 2.23.1).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\nCommand (m for help):\n</code></pre> <p>\u00bfQue? \u00bfintuitivo verdad?... En primer lugar, listamos las particiones actuales, para esto, el comando es p (de print).</p> <pre><code>Disk /dev/mmcblk0: 31.7 GB, 31674335232 bytes, 61863936 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x00057540\nDevice Boot Start End Blocks Id System\n/dev/mmcblk0p1 2048 186367 92160 c W95 FAT32 (LBA)\n/dev/mmcblk0p2 186368 3667967 1740800 5 Extended\n/dev/mmcblk0p5 188416 3667967 1739776 83 Linux\n</code></pre> <p>Hay que fijarse, importante, el punto de inicio de las particiones (Start). Hay tres particiones, la p1 que es donde est\u00e1 la partici\u00f3n de arranque o boot del sistema. La p2 que es extendida y la p5 que es una partici\u00f3n l\u00f3gica y est\u00e1 contenida dentro de p2. Empezamos por eliminar p2 (y por tanto p5).</p> <pre><code>Command (m for help): d\nPartition number (1,2,5, default 5): 2\nPartition 2 is deleted\n</code></pre> <p>Con el comando d (delete) le decimos que queremos borrar una partici\u00f3n y luego le damos el n\u00famero de partici\u00f3n. Si listamos las particiones que nos quedan ahora, el resultado es este:</p> <pre><code>Command (m for help): p\nDisk /dev/mmcblk0: 31.7 GB, 31674335232 bytes, 61863936 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x00057540\nDevice Boot Start End Blocks Id System\n/dev/mmcblk0p1 2048 186367 92160 c W95 FAT32 (LBA)\n</code></pre> <p>Nos hemos quedado con la partici\u00f3n de arranque, pero tranquilos, que no hemos perdido nada de nuestra tarjeta (todav\u00eda!! XD). A\u00f1adimos de nuevo la partici\u00f3n 2, extendida, d\u00e1ndole m\u00e1s espacio en la tarjeta pero con el mismo punto de inicio, no hace falta que nos acordemos de cual, el sistema nos va a decir cual es ese punto, importante, dejad un poco de hueco para un \u00e1rea de Swap que en breve os voy a contar.</p> <pre><code>Command (m for help): n\nPartition type:\np primary (1 primary, 0 extended, 3 free)\ne extended\nSelect (default p): e\nPartition number (2-4, default 2): 2\nFirst sector (186368-61863935, default 186368):\nUsing default value 186368\nLast sector, +sectors or +size{K,M,G} (186368-7698431, default 7698431): +28G\nPartition 2 of type Linux and of size 28 GiB is set\n</code></pre> <p>Pulsamos comando n (new) e indicamos que es una partici\u00f3n de tipo e (extendida), el n\u00famero que vamos a usar es el 2 y el n\u00famero del sector de inicio que nos marca es el 186368, que es el mismo que ten\u00edamos en el primero listado con el comando p (este dato puede variar en tu caso), y ahora le indicamos que a partir de ese sector nos cree una partici\u00f3n de 28Gb con el +28G. Ahora vamos a crear una nueva partici\u00f3n, la 5, de tipo l\u00f3gico, lo hacemos as\u00ed:</p> <pre><code>Command (m for help): n\nPartition type:\np primary (1 primary, 1 extended, 2 free)\nl logical (numbered from 5)\nSelect (default p): l\nAdding logical partition 5\nFirst sector (188416-61863935, default 188416):\nUsing default value 188416\nLast sector, +sectors or +size{K,M,G} (188416-61863935, default 61863935): +28G\nPartition 5 of type Linux and of size 28 GiB is set\n</code></pre> <p>Una vez m\u00e1s, vemos como el sector de inicio coincide con el que ten\u00edamos en el primer listado (esto es realmente lo importante, que eso no cambie). Hemos puesto el comando n para una nueva partici\u00f3n, el tipo indicado es l de logical, y el tama\u00f1o el mismo que hemos dado para la extendida (una partici\u00f3n extendida puede contener varias l\u00f3gicas). Si queremos ver si tenemos todo bien, hasta ahora, volvemos a imprimir la tabla actual de particiones:</p> <pre><code>Command (m for help): p\nDisk /dev/mmcblk0: 31.7 GB, 31674335232 bytes, 61863936 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x00057540\nDevice Boot Start End Blocks Id System\n/dev/mmcblk0p1 2048 186367 92160 c W95 FAT32 (LBA)\n/dev/mmcblk0p2 186368 61863935 30838784 5 Extended\n/dev/mmcblk0p5 188416 61863935 30837760 83 Linux\n</code></pre> <p>\u00bfYa hemos terminado?, pues no. Tenemos 29Gb m\u00e1s o menos particionados en nuestra tarjeta, vamos a crear la partici\u00f3n para Swap, que veremos m\u00e1s adelante como manejar, y as\u00ed dejamos esto listo para el reinicio.</p> <pre><code>Command (m for help): n\nPartition type:\np primary (2 primary, 0 extended, 2 free)\ne extended\nSelect (default p): p\nPartition number (1-4, default 3): 3\nFirst sector (6477824-7698431, default 6477824):\nUsing default value 6477824\nLast sector, +sectors or +size{K,M,G} (6477824-7698431, default 7698431):\nUsing default value 7698431\nPartition 3 of type Linux and of size 1.1 GiB is set\nCommand (m for help): t\nPartition number (1-4): 3\nHex code (type L to list codes): 82\nChanged system type of partition 3 to 82 (Linux swap / Solaris)\n</code></pre> <p>Empezamos con el comando n para a\u00f1adir una nueva partici\u00f3n de tipo p (primary), y el n\u00famero de partici\u00f3n a usar es el 3. No tenemos que preocuparnos por sectores de inicio y sectores de fin, el sistema nos ofrece el primer sector libre como sector de inicio, y el \u00faltimo sector disponible como sector de fin, d\u00e1ndonos as\u00ed todo el espacio que queda disponible en la tarjeta. Y luego damos el comando t (type), porque por defecto el tipo es el 83, una partici\u00f3n Linux, pero nosotros queremos que sea del tipo 82 Linux Swap, as\u00ed que despu\u00e9s de indicar el n\u00famero de partici\u00f3n, la 3, ponemos ese c\u00f3digo, el 82 y ya est\u00e1.</p> <p>Bien, tarjeta particionada, solo tenemos que hacer dos cosas, salvar la nueva tabla de particiones y reiniciar (y como tercera cosa, cruzad los dedos).  Para salvar:</p> <pre><code>Command (m for help): w\nThe partition table has been altered!\nCalling ioctl() to re-read partition table.\nWARNING: Re-reading the partition table failed with error 16: Device or resource busy.\nThe kernel still uses the old table. The new table will be used at\nthe next reboot or after you run partprobe(8) or kpartx(8)\nSyncing disks.\n</code></pre> <p>Y ahora reiniciamos (recordad, cruzad los dedos, es fundamental) ....</p> <pre><code>[root@Jarvis ~]# sync\n[root@Jarvis ~]# reboot\n</code></pre> <p>Cuando el sistema vuelva a ofrecernos conexi\u00f3n (y podamos volver a respirar.. XD) tendremos la nueva particiones cargada, pero los File System ocupan lo mismo, as\u00ed que debemos redimensionarlos para que se extiendan hasta ocupar todo el espacio disponible en las particiones, esto es as\u00ed:</p> <pre><code>[root@Jarvis ~]$ sudo resize2fs /dev/mmcblk0p5\nresize2fs 1.42.7 (21-Jan-2013)\nFilesystem at /dev/mmcblk0p5 is mounted on /; on-line resizing required\nold_desc_blocks = 1, new_desc_blocks = 2\nThe filesystem on /dev/mmcblk0p5 is now 7709440 blocks long.\n</code></pre> <p>El comando <code>resize2fs</code>si no le indicamos ning\u00fan par\u00e1metro adicional extiende el File System hasta la capacidad disponible en el dispositivo, en nuestro caso <code>/dev/mmcblk0p5</code>, siendo p5 la partici\u00f3n 5, esto es, nuestra partici\u00f3n l\u00f3gica.</p> <p>Este comando tambi\u00e9n se puede usar para extender parcialmente el FS y dejar as\u00ed algo de espacio no disponible a modo de reserva, y tambi\u00e9n se puede hacer para reducir el espacio disponible de un FS, siempre que no est\u00e9 en uso claro.  Ya est\u00e1, nuestra SD est\u00e1 siendo utilizada al m\u00e1ximo.</p>"},{"location":"rpi_install_ii/#area-de-swap","title":"\u00c1rea de Swap","text":"<p>\u00bfQue es esto el \u00e1rea de Swap? Pues sencillo, as\u00ed, a grosso modo es un \u00e1rea de intercambio. \u00bfComo el archivo de paginaci\u00f3n de Windows (arggg)?, si, como eso, pero BIEN hecho. La gesti\u00f3n de la memoria f\u00edsica (RAM) se hace mediante bloques, llamados p\u00e1ginas. Cuando el sistema necesita liberar p\u00e1ginas de memoria f\u00edsica las vuelca sobre esta memoria virtual. Por l\u00f3gica, el acceso a la memoria f\u00edsica es mucho m\u00e1s r\u00e1pido que a la virtual, estamos hablando de accesos a placas de memoria que se miden en nonasegundos respecto a accesos a discos duros que se miden en milisengundos. Pero tambi\u00e9n es cierto que el almacenamiento en disco es mucho m\u00e1s barato que la ram f\u00edsica, por no hablar de que la mayor\u00eda de las m\u00e1quinas tienen una cantidad de memoria RAM con la que pueden trabajar, si necesitamos m\u00e1s o bien cambiamos de m\u00e1quina o bien usamos Swap. Hay una expresi\u00f3n muy com\u00fan en esto de la inform\u00e1tica que es, la m\u00e1quina est\u00e1 paginando, esto viene a indicar que la m\u00e1quina est\u00e1 casi sin memoria f\u00edsica y empieza a volcar en la swap todo lo que puede para evitar quedarse tiesa, durante ese tiempo sigue dando servicio pero se ve claramente degradado. El encontrar ese equilibro entre la cantidad de RAM f\u00edsica, la cantidad de Swap a usar, y el momento en el que paginares uno de los \"unicornios\" en la optimizaci\u00f3n de servidores...</p> <p>Para nuestro caso, la rPi, modelo B tiene 512 Mb de RAM, yo le voy a dar 1Gb adicional para Swap. Posteriormente veremos como podemos hacer ciertos ajustes en el comportamiento de esta Swap que vamos a crear para precisamente definir eso que comentaba. Hace un momento os he dicho como crear una partici\u00f3n en nuestra SD espec\u00edfica de Swap, vamos a darle uso.</p> <pre><code>[root@Jarvis ~]# mkswap /dev/mmcblk0p3\nSetting up swapspace version 1, size = 610300 KiB\nno label, UUID=97bae743-01b0-4307-baae-fc41b40bc4c6\n</code></pre> <p>Con ese comando <code>mkswap</code>(make swap) creamos un \u00e1rea de swap en el dispositivo que le indiquemos, en este caso la partici\u00f3n p3 de nuestra SD que es la que hemos habilitado para ello. Ahora debemos configurar el sistema para que en cada arranque este \u00e1rea de swap se ponga en uso:</p> <pre><code>[root@Jarvis ~]# vi /etc/fstab\n#\n# /etc/fstab: static file system information\n#\n# &lt;file system&gt; &lt;dir&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;\n/dev/mmcblk0p1 /boot vfat defaults 0 0\n/dev/mmcblk0p3 none swap defaults 0 0\n</code></pre> <p>Editamos con nuestro nuevo amigo, el editor Vi el fichero fstab (file system table), y a\u00f1adimos una l\u00ednea al final (pulsando <code>SHIFT + G</code>para ir al final, y una vez all\u00ed pulsando i de insertar).</p> <p>La l\u00ednea indica el dispositivo, el punto de montaje (que en el caso de swap no aplica), el tipo a usar y luego las opciones por defecto, default y 0 0. Sobre las opciones, usamos defaults. Estas opciones si mir\u00e1is en enlace que os he puesto, ver\u00e9is de todo, incluso una opci\u00f3n discard muy apropiada para los discos SSD tan de moda \u00faltimamente. En el caso de un FS basado en ext4 ser\u00eda similar a poner las opciones rw, suid, dev, exec, auto, nouser y async. Y los 0 0 del final, el primero es para dump, los posibles valores son 0 o 1, en caso de 1 se hace dump de este punto de montaje, si es que dump est\u00e1 instalado, que no es m\u00e1s que una herramienta que nos permite hacer volcados a un fichero de un punto de montaje, luego lo vemos en el apartado de backup.</p> <p>El segundo 0 es para el proceso fsck o File System Check, los posibles valores son 0,1 y 2. El valor 0 es que no se tiene en cuenta esta FS en caso de hacer un chequeo autom\u00e1tico, los valores 1 y 2 si se tiene en cuenta y especificas la prioridad de validaci\u00f3n, siendo siempre 1 para el punto de arranque o boot que debe tener prioridad sobre el resto, que en caso de que queramos chequearlos tendr\u00e1n que llevar un 2. Activamos la swap, con el siguiente comando <code>[root@Jarvis ~]# swapon -a</code></p> <p>Esto le dice al sistema que mire en el fichero <code>/etc/fstab</code> y ponga en marcha todos los dispositivos de tipo swap. Para ver que se est\u00e1 usando, pues utilizamos el mismo comando pero con este otro par\u00e1metro:</p> <pre><code>[root@Jarvis ~]# swapon -s\nFilename Type Size Used Priority\n/dev/mmcblk0p3 partition 610300 0 -1\n</code></pre> <p>Y si queremos asegurarnos que est\u00e1 activa, las primeras l\u00edneas del comando top nos dir\u00e1n la cantidad de swap disponible:</p> <pre><code>KiB Mem: 473124 total, 48240 used, 424884 free, 7280 buffers\nKiB Swap: 610300 total, 0 used, 610300 free, 20072 cached\n</code></pre> <p>M\u00e1s cosas sobre la swap, podemos modificar su comportamiento, en el fichero <code>/etc/sysctl.conf</code>: <pre><code># Swapping too much or not enough? Disks spinning up when you'd\n# rather they didn't? Tweak these.\n#vm.vfs\\_cache\\_pressure = 100\n#vm.laptop\\_mode = 0\n#vm.swappiness = 60\n</code></pre></p> <p>Modificando el par\u00e1metro swappiness le indicamos al sistema su tendencia usar o no la swap, contra m\u00e1s cerca del 99 m\u00e1s paginar\u00e1 en este \u00e1rea.</p>"},{"location":"rpi_install_ii/#y-si-quiero-usar-mi-rpi-por-wifi","title":"\u00bfY si quiero usar mi rPI por Wifi?","text":"<p>Por defecto en ARCH no tenemos soporte para los adaptares WIFI, en otras distribuciones si que bien integrado pero en esta debemos instalarlo y configurarlo, no es muy dif\u00edcil, estos son los pasos. En primer lugar instalamos el paquete necesario:</p> <pre><code>[root@Jarvis ~]# pacman -S wireless_tools\nresolving dependencies...\nlooking for inter-conflicts...\nPackages (1): wireless_tools-29-8\nTotal Download Size: 0.08 MiB\nTotal Installed Size: 0.24 MiB\n:: Proceed with installation? [Y/n] Y\n:: Retrieving packages ...\nwireless_tools-29-8-armv6h 82.4 KiB 231K/s 00:00\n[#############################################] 100%\n(1/1) checking keys in keyring\n[#############################################] 100%\n(1/1) checking package integrity\n[#############################################] 100%\n(1/1) loading package files\n[#############################################] 100%\n(1/1) checking for file conflicts\n[#############################################] 100%\n(1/1) checking available disk space\n[#############################################] 100%\n(1/1) installing wireless\\_tools\n[#############################################] 100%\n</code></pre> <p>Ahora conectamos nuestro adaptador WIFI al puerto USB libre y reinicarmos el sistema para que se carguen los drivers del mismo <code>[root@Jarvis ~]# sync; reboot</code></p> <p>Una vez que ha arrancado debemos mirar si nuestro adaptador USB aparece listado, para esto:</p> <pre><code>[root@Jarvis ~]# lsusb\nBus 001 Device 004: ID 148f:5370 Ralink Technology, Corp. RT5370 Wireless Adapter\nBus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. SMSC9512/9514 Fast Ethernet Adapter\nBus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. SMC9512/9514 USB Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n</code></pre> <p>En el bus 001, el dispositivo 4 se correspondea nuestro adaptador Wifi. Y ahora lo vamos a configurar, para despu\u00e9s activarlo. El comando de configuraci\u00f3n es este, y os aparece un menu realtivamente intuitivo <code>[root@Jarvis ~]# wifi-menu</code></p> <p>En este men\u00fa debemos ver nuestra BSSID listada, esto es, nuestra red Wifi, podremos introducir un nombre que le vamos a dar a la conexi\u00f3n y teclear la clave de la Wifi, ojo, que esta clave se muestra en plano en pantalla, no aparecen los * para taparla. Ahora vamos a comprobar que se ha activado bien el interfaz de red. El comando con el que manejamos los interfaces de red es ifconfig, con el par\u00e1metro -a que nos los lista todos. En la salida de este comando deberemos localizar algo as\u00ed:</p> <pre><code>[root@Jarvis ~]# ifconfig -a\neth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500\ninet 192.168.1.20 netmask 255.255.255.0 broadcast 192.168.1.255\nether b8:27:eb:30:f0:8f txqueuelen 1000 (Ethernet)\nRX packets 440 bytes 37247 (36.3 KiB)\nRX errors 0 dropped 1 overruns 0 frame 0\nTX packets 264 bytes 43962 (42.9 KiB)\nTX errors 0 dropped 0 overruns 0 carrier 0 collisions 0\n...\nwlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500\ninet 192.168.1.23 netmask 255.255.255.0 broadcast 192.168.1.255\nether 00:87:32:91:02:39 txqueuelen 1000 (Ethernet)\nRX packets 7 bytes 1346 (1.3 KiB)\nRX errors 0 dropped 0 overruns 0 frame 0\nTX packets 26 bytes 5325 (5.2 KiB)\nTX errors 0 dropped 0 overruns 0 carrier 0 collisions 0\n</code></pre> <p>Ese eth0 se corresponde con nuestra tarjeta de red por Ethernet, y el wlan0 se corresponde con nuestro adaptador Wifi. En ambos casos vemos las Ips asigandas a esas direcciones MAC por nuestro DHCP en el router. Para esta configuraci\u00f3n de wlan0 se ha generado un fichero de perfil en la m\u00e1quina. El fichero de perfil est\u00e1 guardado aqu\u00ed: <code>/etc/netctl/wlan0-JAZZTEL_B1B9</code></p> <p>Tenemos que hacer dos cosas, la primera es activarlo para ver que todo marcha bien:</p> <pre><code>[root@Jarvis netctl]# netctl start wlan0-JAZZTEL_B1B9\n</code></pre> <p>Si ejecutamos un <code>ifconfig -a</code>a continuaci\u00f3n veremos como nuestro interfaz de red wlan0 ya tiene direcci\u00f3n IP asignada:</p> <pre><code>wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500\ninet 192.168.1.23 netmask 255.255.255.0 broadcast 192.168.1.255\n</code></pre> <p>Y ahora lo dejamos habilitado para que se cargue en el arranque de m\u00e1quina.</p> <pre><code>[root@Jarvis netctl]# netctl enable wlan0-JAZZTEL_B1B9\nln -s '/etc/systemd/system/netctl@wlan0\\x2dJAZZTEL_B1B9.service' '/etc/systemd/system/multiuser.\ntarget.wants/netctl@wlan0\\x2dJAZZTEL_B1B9.service'\n</code></pre> <p>Con esto, en los sucesivos arranques se activar\u00e1 el dispositivo Wifi. </p> <p>Y listo, ya tenemos nuestra Pi para poder empezar a darle ca\u00f1a.</p>"},{"location":"rpi_intro/","title":"Instalando una RaspberryPI todo uso... en 2014","text":"<p>Pues s\u00ed, en 2014, en el momento de escribir este mensaje son algo m\u00e1s de 6 a\u00f1os, pero claro, 6 a\u00f1os en tecnolog\u00eda son mucho tiempo.</p> <p>Por aquella \u00e9poca ten\u00eda una RPi modelo B de 512Mb con la que trasteaba bastante, y tambi\u00e9n formaba parte del GUM de la Comunidad de Madrid (Grupo de usuarios MAC), una cosa lleva a la otra y termin\u00e9 ofreciendo un taller donde contar el uso que pod\u00edamos darles a estas placas, haciendo una instalaci\u00f3n y alguno de sus usos orientados al usuario de MAC.</p> <p>Y... se me fue un poco de las manos... all\u00ed me plant\u00e9 con la intenci\u00f3n contar como montar casi de todo, un servidor web, un servidor de archivos, un servidor para copias de seguridad, un servidor de AirPrint/Cups, un media center con XBMC y AirPlay, gesti\u00f3n dom\u00f3tica... todo con lo que hab\u00eda estado trasteando meses atr\u00e1s</p> <p>As\u00ed que cargu\u00e9 con mi Pi, mi viejo MacBook, impresora multifunci\u00f3n, enchufes dom\u00f3ticos Z-Wave, un router, c\u00e1maras IP, etc. y mont\u00e9 el \"tenderete\".</p> <p>A los 5 minutos de empezar la charla ya me di cuenta que aquel foro no se estaba enterando de nada y que en el fondo lo que no fuesen pantallas gr\u00e1ficas no ten\u00edan cabida all\u00ed, por mucho que algunos se pusieran el t\u00edtulo de \"cacharreros\" (geek que queda mejor... fontanero-geek, chapucero-geek, telepizzero-geek...), pocos eran los que cazaba algo, y muchos los que ya estaban sacando sus iPads y empezaban a garabatear dibujos...</p> <p>Est\u00e1 claro que lo hice todo mal desde el principio, y lo \u00fanico con lo que hacerte fu\u00e9 con la publicaci\u00f3n durante la noche anterior en el foro privado de la asociaci\u00f3n una serie de mensajes con todo lo que pretend\u00eda contar.</p> <p>L\u00f3gicamente esto a d\u00eda de hoy no vale para mucho, en 6 a\u00f1os hay nuevas versiones de todo (XBMC ya es Kodi, y de AirPlay te puedes despedir...), pero recordad que el motivo de existir de este blog es que pueda guardar mis cosas.</p> <p>Aqu\u00ed ir\u00e9 actualizando un \u00edndice de las distintas partes de este grupo de mensajes por si quer\u00e9is ir saltando a alguna parte que os interese m\u00e1s.</p> <ul> <li>Introducci\u00f3n</li> <li>Instalaci\u00f3n b\u00e1sica (I)</li> <li>Instalaci\u00f3n b\u00e1sica (II)</li> <li>Securizaci\u00f3n</li> <li>Copias de Seguridad</li> <li>Pr\u00e1ctico 1 - Servidor de WordPress (I)</li> <li>Pr\u00e1ctico 1 - Servidor de WordPress (II)</li> <li>Pr\u00e1ctico 2 - Gestor de Descargas</li> <li>Pr\u00e1ctico 3 - Servidor Impresi\u00f3n/AirPrint</li> <li>Pr\u00e1ctico 4 - Servidor Copias de Seguridad</li> <li>Pr\u00e1ctico 5 - Dom\u00f3tica, C\u00e1maras IP y RaZberry</li> <li>Pr\u00e1ctico 6 - Media Center</li> <li>Pr\u00e1ctico 7 - Emulaci\u00f3n de juegos</li> <li>Alternativas a RPi</li> <li>Ap\u00e9ndices (I) - Reinicio de router</li> <li>Ap\u00e9ndices (II) - XBMC con MariaDB para BBDD distribuida</li> <li>Ap\u00e9ndices (III) - Administraci\u00f3n con Webmin</li> </ul>"},{"location":"rpi_securizacion/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 4) \u2013 Securizaci\u00f3n","text":""},{"location":"rpi_securizacion/#es-necesario-securizar-mi-maquina","title":"\u00bfEs necesario securizar mi m\u00e1quina?","text":"<p>Esto lo tienes que decidir tu.</p> <p>Si vas a tener t\u00fa m\u00e1quina en el sal\u00f3n de casa y s\u00f3lo la usas para XBMC o para emular juegos y poco m\u00e1s lo mismo no\u00a0te merece ni molestarte en hacerlo.</p> <p>Ahora bien, si vas a tener tu m\u00e1quina en la wifi de tu piso de estudiantes compartido, si la vas a conectar al exterior y\u00a0vas a querer conectarte desde fuera por conexi\u00f3n SSH, o si vas a poner esta m\u00e1quina en el colegio donde das clases\u00a0lleno de j\u00f3venes hiperhormonados que desean pasar a la historia del centro educativo como el que formate\u00f3 el\u00a0servidor del profesor... pues s\u00ed, debes securizarla.</p> <p>Esto es como dejar una bicicleta en la puerta de una biblioteca, contra m\u00e1s medidas de seguridad m\u00e1s costar\u00e1 que te\u00a0la roben, pero ten por seguro que si quieren ir a por ella y rob\u00e1rtela, les costar\u00e1 m\u00e1s o menos pero te la robar\u00e1n.</p>"},{"location":"rpi_securizacion/#vale-entonces-securizamos-creamos-usuario","title":"Vale, entonces securizamos, creamos usuario","text":"<p>Lo primero que vamos a hacer es dejar de usar nuestro apreciado usuario root o administrador para todas las tareas\u00a0habituales. Con esto consigues dos cosas, por un lado dejas de exponer tu conexi\u00f3n segura con estas credenciales y\u00a0consigues usar otro usuario con muchos menos privilegios que puede que a la hora de que alg\u00fan comando de los\u00a0\"cr\u00edticos\" se te escape de los dedos, la cosa no vaya a mayores.</p> <p>Por tanto, vamos a crear un nuevo usuario.</p> <p>En Linux/Unix los usuarios residen en un fichero de configuraci\u00f3n <code>/etc/passwd</code>, este fichero tiene estructura de\u00a0campos separados por el caracter : y hay datos tales como su UID o identificador de usuario, su GID o identificador\u00a0de grupo PRIMARIO (por que podemos tener varios grupos secundarios), datos como nombre, ruta del directorio\u00a0HOME y el ejecutable de nuestra Shell de usuarios, esto es, nuestro int\u00e9rprete de comandos.</p> <p>En ning\u00fan caso aparecen claves, ni cifradas ni sin cifrar, estas claves est\u00e1n en otro fichero <code>/etc/shadow</code> donde\u00a0aparecen cifradas y este fichero a su vez no es accesible salvo para los administradores del sistema.</p> <p>Como os he dicho los usuarios tienen un grupo primario y pueden tener grupos secundarios, los grupos se guardan en\u00a0el fichero <code>/etc/passwd</code> que tambi\u00e9n tiene esa estructura de campos separados por el car\u00e1cter :, apareciendo en primer\u00a0lugar el nombre del grupo, a continuaci\u00f3n el GID o identificador de grupo y por \u00faltimo, una lista separada por , con\u00a0todos los usuarios que forman parte del grupo a nivel secundario.</p> <p>Creamos el grupo y el usuario con esta secuencia de comandos:</p> <p>[root@Jarvis etc]# groupadd -g 1001 operadores [root@Jarvis etc]# useradd -m -g 1001 -u 1001 -s /bin/bash -d /home/operador operador [root@Jarvis ~]# passwd operador</p> <p>Enter new UNIX password: *** Retype new UNIX password: ***</p> <p>passwd: password updated successfully</p> <p>El comando <code>groupadd</code> a\u00f1ade un nuevo grupo al fichero <code>/etc/group</code>, con el par\u00e1metro -g indicamos el n\u00famero\u00a0identificador de grupo que queremos utilizar, y en \u00faltimo lugar el argumento que se corresponde al nombre del grupo.</p> <p>El comando <code>useradd</code>a\u00f1ade un nuevo usuario al fichero <code>/etc/passwd</code>, con el par\u00e1metro -g indicamos el n\u00famero de\u00a0identificador de su grupo primario, con el par\u00e1metro -u indicamos el n\u00famero de identificador del usuario, con el\u00a0par\u00e1metro -s el ejecutable de nuestro int\u00e9rprete de comando o shell, con el par\u00e1metro -d la ruta del home del usuario\u00a0y por \u00faltimo el argumento que da nombre a nuestro usuario.</p> <p>Con estos dos comandos creamos por tanto grupo y usuario, se rellenan los ficheros passwd y group y se coloca a\u00a0dicho usuario dentro del grupo creado como grupo primario.</p> <p>\u00bfY la clave?, la clave se la damos despu\u00e9s, con el comando <code>passwd</code>, en este caso, el comando recibe un argumento\u00a0que es el nombre del usuario que hemos creado. Por defecto si no indicamos nada el cambio de clave se hace sobre el\u00a0usuario con el que estamos conectado, y por definici\u00f3n un usuario no puede cambiar m\u00e1s que su propia clave, as\u00ed que\u00a0ejecutar el comando <code>passwd &lt;usuario&gt;</code>s\u00f3lo lo podremos hacer con el usuario administrador o root.</p>"},{"location":"rpi_securizacion/#instalamos-sudo","title":"Instalamos sudo","text":"<p>Ahora vamos a instalar <code>sudo</code>, esto os suena de cuando lo hemos usado para instalar la imagen Iso en nuestra tarjeta\u00a0SD, es ese programa que nos permite ejecutar otros programas como si fu\u00e9semos otro usuario, esto se hace as\u00ed:</p> <p>[root@Jarvis ~]# pacman -S sudo resolving dependencies... looking for inter-conflicts... Packages (1): sudo-1.8.6.p8-1 Total Download Size: 0.55 MiB Total Installed Size: 2.48 MiB :: Proceed with installation? [Y/n] Y :: Retrieving packages ... sudo-1.8.6.p8-1-armv6h 566.1 KiB 717K/s 00:01 [#################################] 100% (1/1) checking keys in keyring [#################################] 100% (1/1) checking package integrity [#################################] 100% (1/1) loading package files [#################################] 100% (1/1) checking for file conflicts [#################################] 100% (1/1) checking available disk space [#################################] 100% (1/1) installing sudo [#################################] 100%</p> <p>Utilizamos nuestro gestor de paquetes pacman con el par\u00e1metro -S y el argumento sudo, esto es, instalame ese\u00a0paquete.</p> <p>Y una vez instalado tenemos que configurarlo, la configuraci\u00f3n no es m\u00e1s que la edici\u00f3n de un fichero, <code>/etc/sudoers</code>, y\u00a0para tal fin tenemos un programa espec\u00edfico, visudo, y claro, al llevar VI en el nombre ya os pod\u00e9is imaginar como seusa.</p> <p>Por supuesto que tambi\u00e9n podremos modificar el fichero libremente con VI, pero cualquier error de sint\u00e1xis\u00a0dejar\u00e1 el sistema hecho unos zorros, visudo, adem\u00e1s de bloquear el fichero (nadie m\u00e1s podr\u00e1 editarlo a la vez) y\u00a0hacer copia previa, verifica la sintaxis antes de salvarlo, as\u00ed pues, uso m\u00e1s que recomendado.</p> <p>[root@Jarvis etc]# visudo</p>"},{"location":"rpi_securizacion/#uncomment-to-allow-members-of-group-wheel-to-execute-any-command","title":"Uncomment to allow members of group wheel to execute any command","text":""},{"location":"rpi_securizacion/#wheel-allall-all","title":"%wheel ALL=(ALL) ALL","text":"<p>%operadores ALL=(ALL) ALL</p> <p>A\u00f1adimos la l\u00ednea arriba indicada,\u00a0\u00bfqu\u00e9\u00a0significa esa l\u00ednea?</p> <p>El pimero ALL= indica desde donde nos pueden ejecutar, en este caso desde cualquier m\u00e1quina.</p> <p>El segundo (ALL) indica los usuarios que podr\u00e1n hacer sudo, dentro del grupo que vemos ahora.</p> <p>El tercer ALL indica los comandos que ese usuario podr\u00e1 ejecutar, en este caso todos.</p> <p>\u00bfY ese %operadores? pues con eso indicamos que todo esto que hemos explicado arriba de los ALL s\u00f3lo lo van a\u00a0poder hacer los usuarios que por perfilado (passwd y group) tengran el grupo operadores como grupo PRIMARIO, esto\u00a0es, como grupo dentro de passwd, si el usuario tiene el grupo como SECUNDARIO a trav\u00e9s del fichero de grupos no\u00a0cumplir\u00e1 esta configuraci\u00f3n y no podr\u00e1 ejecutar sudo.</p> <p>Cuando ejecutemos por tanto sudo con nuestro usuario operador nos solicitar\u00e1 una clave, que es la nuestra, la del\u00a0usuario operador.</p> <p>Ahora con esto instalado ya no necesitamos el acceso directo a la m\u00e1quina con el usuario root, por tanto, lo mejor es\u00a0cerrarlo, que no se pueda conectar nadie directamente con un usuario privilegiado.</p> <p>Esta operaci\u00f3n es algo m\u00e1s delicada pues hay que tocar algunos ficheros de configuraci\u00f3n que de hacerlo mal nos\u00a0quedamos sin conexi\u00f3n... as\u00ed que cuidado, y ante la duda ESC + :q! para salir de VI sin hacer cambios.</p>"},{"location":"rpi_securizacion/#cortamos-la-conexion-directa-de-root","title":"Cortamos la conexi\u00f3n directa de root","text":"<p>Para esto, en primer lugar editamos el fichero <code>/etc/ssh/sshd_config</code></p> <p>[root@Jarvis etc]# vi /etc/ssh/sshd_config</p> <p>Debemos buscar la l\u00ednea que tiene:</p>"},{"location":"rpi_securizacion/#permitrootlogin-yes","title":"PermitRootLogin yes","text":"<p>Y cambiarla por esta otra:</p> <p>PermitRootLogin no</p> <p>Para esto bajamos con los cursores por el fichero y una vez puestos sobre el s\u00edmbolo # de la l\u00ednea pulsamos la tecla\u00a0x, que nos borra ese car\u00e1cter. Ahora nos movemos con las flechas a la derecha hasta ponernos encima de la y de yes\u00a0y pulsamos el comando cw (Change Word), nos aparecer\u00e1 un s\u00edmbolo $ sobre la s que nos marca el final de la palabra\u00a0que estamos sustituyendo, y tecleamos no.</p> <p>Salimos salvando el fichero con ESC :wq!</p> <p>Tenemos que reiniciar el demonio de ssh, \u00bfdemonio?, si, los procesos residentes en el sistema, que se quedan a la\u00a0espera de hacer su trabajo ante eventos espec\u00edficos se llaman demonios (Daemon), en el caso de los procesos de ssh\u00a0su demonio se llaman sshd.</p> <p>[root@Jarvis etc]# systemctl restart sshd</p> <p>El comando <code>systemctl</code> es nuestro comando para controlar el sistema de arranque/ejecuci\u00f3n de servicios en la m\u00e1quina\u00a0bajo systemd</p> <p>En este caso le estamos diciendo que reinicie ese servicio/demonio concreto.</p> <p>En cuanto termine el reinicio del demonio podremos probar a abrir una nueva conexi\u00f3n ssh con root y veremos como\u00a0nos da un acceso denegado, as\u00ed pues, a partir de este momento todas las conexiones con el usuario operador y las\u00a0ejecuciones privilegiadas o bien con sudo o bien haciendo<code>su -</code>para cambiar a una shell de usuario root.</p>"},{"location":"rpi_securizacion/#y-podemos-usar-autenticacion-en-dos-pasos-pues-claro","title":"\u00bfY podemos usar autenticaci\u00f3n en dos pasos?, pues claro","text":"<p>Primero tenemos que instalarnos en nuestro tel\u00e9fono el programa de Google que nos genera los \"tokens\" por tiempo,\u00a0para iOs este es el enlace</p> <p>Tenemos que descargarnos los fuentes de este librer\u00eda PAM de la propia Google, y lo tenemos que hacer desde\u00a0nuestra m\u00e1quina, vamos a utilizar el comando <code>wget</code></p> <p>PAM es el acr\u00f3nimo de Linux Pluggable Authentication Modules, esto es, m\u00f3dulo conectables de autenticaci\u00f3n, vamos\u00a0a darle a nuestro sistema por tanto un m\u00f3dulo de autenticaci\u00f3n en dos pasos de Google en formato librer\u00eda.</p> <p>[operador@Jarvis ~]$ su -    Password:  <p>[root@Jarvis ~]# mkdir /Descargas; cd /Descargas  [root@Jarvis Descargas]# wget https://google-authenticator.googlecode.com/files/libpam-google-authenticator-1.0-source.tar.bz2</p> <p>Nos conectamos con operador, hacemos un su - para cambiar al usuario root (la clave que se nos pide es la de ese\u00a0usuario, root).</p> <p>Creamos un directorio con el comando <code>mkdir</code> (Make Directory), y nos posicionamos en el con <code>cd</code>. Como veis los dos\u00a0comandos est\u00e1n en la misma l\u00ednea separados por un ;, esto es por que la shell ejecuta un comando y\u00a0ejecuta el otro.</p> <p>Si miramos la \"doble extensi\u00f3n\" del fichero que nos descargamos vemos que por un lado se trata de un fichero\u00a0comprimido con Bzip2\u00a0dada la extensi\u00f3n bz2 y que adem\u00e1s\u00a0se trata de un conjunto de archivos y directorios empaquetados con tar</p> <p>Para desempaquetar el tar no tenemos problemas pues es algo que siempre vamos a encontrar en la distribuci\u00f3n,\u00a0pr\u00e1cticamente sea la que sea.</p> <p>En cuanto a bzip2 ya es otra cosa y la tendremos que instalar, para esto, ya sab\u00e9is recurrimos a nuestro gestor de\u00a0paquetes (seguimos teniendo nuestra conexi\u00f3n y nuestra sesi\u00f3n de operador con la que hemos cambiado a root):</p> <p>[root@Jarvis Descargas]# pacman -S bzip2</p> <p>resolving dependencies...</p> <p>Tenemos que descomprimir y desempaquetar el fichero de los fuentes de esta librer\u00eda, con algunas versiones\u00a0recientes de tar es posible que este haga las dos operaciones, que primero descomprima y luego desempaquete, pero\u00a0con esta que os pongo yo a continuaci\u00f3n os funcionar\u00e1 siempre, sea cual sea la versi\u00f3n de tar y el formato de\u00a0compresi\u00f3n:</p> <p>[root@Jarvis Descargas]# bzip2 -dc libpam-google-authenticator-1.0-source.tar.bz2 | tar -xv</p> <p>\u00bfOs acord\u00e1is que antes os he contado lo de &gt; &lt; y |?, pues aqu\u00ed vemos el uso de | (pipe o tuber\u00eda), esto lo que hace\u00a0es convertir la salida estandar de un comando en la entrada est\u00e1ndar del siguiente, por tanto toma la descompresi\u00f3n\u00a0del fichero y se lo entrega al comando tar para que lo desempaquete.</p> <p>S\u00f3lo nos queda compilar, y para esto necesitamos entorno de desarrollo, lo que implica instalar al menos los\u00a0siguientes paquetes:</p> <p>[root@Jarvis Descargas]# pacman -S make gcc</p> <p>resolving dependencies...</p> <p>Y estas son las \u00f3rdenes para poder compilar:</p> <p>[root@Jarvis Descargas]# cd libpam-google-authenticator-1.0 [root@Jarvis libpam-google-authenticator-1.0]# make</p> <p>gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o google-authenticator.o google-authenticator.c gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o base32.o base32.c gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o hmac.o hmac.c gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o sha1.o sha1.c gcc -g -o google-authenticator google-authenticator.o base32.o hmac.o sha1.o -ldl gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o pam_google_authenticator.o pam_google_authenticator.c gcc -shared -g -o pam_google_authenticator.so pam_google_authenticator.o base32.o hmac.o sha1.o -lpam gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o demo.o demo.c gcc -DDEMO --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o pam_google_authenticator_demo.o pam_google_authenticator.c gcc -g -rdynamic -o demo demo.o pam_google_authenticator_demo.o base32.o hmac.o sha1.o -ldl gcc -DTESTING --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden \\   -o pam_google_authenticator_testing.o pam_google_authenticator.c gcc -shared -g -o pam_google_authenticator_testing.so pam_google_authenticator_testing.o base32.o hmac.o sha1.o -lpam gcc --std=gnu99 -Wall -O2 -g -fPIC -c -fvisibility=hidden -o pam_google_authenticator_unittest.o pam_google_authenticator_unittest.c gcc -g -rdynamic -o pam_google_authenticator_unittest pam_google_authenticator_unittest.o base32.o hmac.o sha1.o -lc -ldl</p> <p>Y si la compilaci\u00f3n no nos da ning\u00fan error, procedemos a instalarlo:</p> <p>[root@Jarvis libpam-google-authenticator-1.0]# make install</p> <p>cp pam_google_authenticator.so /lib/security cp google-authenticator /usr/local/bin</p> <p>Esto nos deja por un lado instalada la librer\u00eda de seguridad, en <code>/lib/security</code>, y el programa <code>google-authenticator</code> que\u00a0nos va a servir para genera la entrada en el programa de autenticaci\u00f3n de nuestro terminal m\u00f3vil.</p> <p>Antes de activar la librer\u00eda debemos tener generados los c\u00f3digos de acceso con la aplicaci\u00f3n, \u00bfcon que usuario?, puescon el \u00fanico con el que nos podemos conectar a la m\u00e1quina, operador, as\u00ed que necesitamos tener la conexi\u00f3n a\u00a0nuestra m\u00e1quina abierta con dicho usuario o abrir una nueva.</p> <p>Ejectamos el siguiente comando.</p> <p>[operador@Jarvis ~]$ /usr/local/bin/google-authenticator</p> <p>Do you want authentication tokens to be time-based (y/n) y</p> <p>https://www.google.com/chart?chs=200x200&amp;chld=M|0&amp;cht=qr&amp;chl=otpauth://totp/root@DomePi%3Fsecret%3DYYMTXZ56APYLY6CE</p> <p>Your new secret key is: DYYMTXZ56APYLY6CE Your verification code is 636744</p> <p>Your emergency scratch codes are:</p> <p>31868847 79023148 93855998 42788591 48617175</p> <p>Do you want me to update your \"~/.google_authenticator\" file (y/n) y</p> <p>Do you want to disallow multiple uses of the same authentication token? This restricts you to one login about every 30s, but it increases your chances to notice or even prevent man-in-the-middle attacks (y/n) y</p> <p>By default, tokens are good for 30 seconds and in order to compensate for possible time-skew between the client and the server, we allow an extra token before and after the current time. If you experience problems with poor time synchronization, you can increase the window from its default size of 1:30min to about 4min. Do you want to do so (y/n) n</p> <p>If the computer that you are logging into isn't hardened against brute-force login attempts, you can enable rate-limiting for the authentication module. By default, this limits attackers to no more than 3 login attempts every 30s. Do you want to enable rate-limiting (y/n) y</p> <p>Como v\u00e9is, se dice a todo que s\u00ed salvo a la compensaci\u00f3n extra de tiempo.</p> <p>Se nos genera una URL y un conjunto de c\u00f3digos adicionales.</p> <p>Si copi\u00e1is esa URL en un navegador os mostrar\u00e1 un QR que se puede escasear con la aplicaci\u00f3n de Google y que\u00a0directamente os arrancar\u00e1 la aplicaci\u00f3n con la generaci\u00f3n de c\u00f3digos para vuestro dispositivo.</p> <p>As\u00ed de f\u00e1cil, iniciar la app en el m\u00f3vil, pulsar sobre a\u00f1adir y escanear ese c\u00f3digo QR.</p> <p>Los otros c\u00f3digos, pues son c\u00f3digo \"quemables\", esto es, si alguna vez no puedes acceder a la aplicaci\u00f3n y te tienes\u00a0que conectar puedes usar uno de esos c\u00f3digos, una vez que lo has usado ya no es v\u00e1lido y por tanto decimos que se\u00a0ha quemado.</p> <p>Si los usas todos, pues no pasa nada, podr\u00edas volver a usar el ejecutable de <code>google-authenticator</code> y generar un nuevo\u00a0conjunto de c\u00f3digos y una nueva URL de acceso.</p> <p>Ya tenemos nuestro generador de c\u00f3digos en sincron\u00eda con nuestra m\u00e1quina, as\u00ed que vamos a activarlo, para esto en\u00a0primer lugar tenemos que editar el fichero <code>/etc/ssh/sshd_config</code> y modificar lo que se indica a continuaci\u00f3n (con el\u00a0usuario root, si est\u00e1s con operador deber\u00e1s hacer el su -):</p> <p>[root@Jarvis ~]# vi /etc/ssh/sshd_config</p>"},{"location":"rpi_securizacion/#change-to-no-to-disable-skey-passwords","title":"Change to no to disable s/key passwords","text":"<p>ChallengeResponseAuthentication no</p> <p>Cambiamos esa l\u00ednea, y donde dice no ponemos yes</p> <p>Ahora editamos el fichero <code>/etc/pam.d/sshd</code>, a\u00f1adiendo una l\u00ednea al principio del fichero (pulsando la combinaci\u00f3n de\u00a0teclas SHIFT + o, que nos a\u00f1ade una linea por encima de la actual):</p> <p>[root@Jarvis ~]# vi /etc/pam.d/sshd</p>"},{"location":"rpi_securizacion/#pam-10","title":"%PAM-1.0","text":""},{"location":"rpi_securizacion/#auth-required-pam_securettyso-disable-remote-root","title":"auth required pam_securetty.so #disable remote root","text":"<p>auth required pam_google_authenticator.so</p> <p>Y ya s\u00f3lo nos queda reiniciar sshd</p> <p>[root@Jarvis ~]# systemctl restart sshd</p> <p>Ahora, si hacemos una conexi\u00f3n veremos que no nos pide usuario/clave, sino que nos pide un c\u00f3digo de verificaci\u00f3n,\u00a0que es el que nos genera nuestra aplicaci\u00f3n m\u00f3vil (\u00f3 alguno de aquellos c\u00f3digos quemables que hab\u00edamos generado)</p> <p>Verification code: Password:</p> <p>Last login: Mon Apr 15 19:16:10 2013 from 192.168.1.10</p> <p>[operador@Jarvis ~]$</p>"},{"location":"rpi_securizacion/#y-ya-estamos-seguros","title":"\u00bfY ya estamos seguros?","text":"<p>Pues no, con esto s\u00f3lo lo has puesto un poco m\u00e1s dif\u00edcil, pero no es una m\u00e1quina segura 100%, para tener unam\u00e1quina as\u00ed, segura al 100% lo \u00fanico que puedes hacer es apagarla y desconectarla de la red...</p>"},{"location":"rpi_securizacion/#que-mas-se-puede-hacer","title":"\u00bfQue m\u00e1s se puede hacer?","text":"<p>Pues podemos activar el firewall de nuestra m\u00e1quina, para restringir las conexiones, que s\u00f3lo nos lo permita desde las\u00a0direcciones IP de nuestros equipos (p.e. desde nuestro equipo MAC de sobremesa o port\u00e1til), o activar la apertura del\u00a0puerto de conexi\u00f3n s\u00f3lo ante un evento denominado PortKnocking.</p> <p>Pero esto son cuestiones algo extensas que ya tratar\u00e9 m\u00e1s adelante.</p>"},{"location":"rpi_wordpress1/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 6) \u2013 pr\u00e1ctico 1 - Wordpress I","text":""},{"location":"rpi_wordpress1/#nuestro-propio-servidor-de-wordpress","title":"Nuestro propio servidor de WordPress","text":"<p>En este, el primer caso pr\u00e1ctico de uso real de la Rpi vamos a ver como instalar un servidor completo de WordPress, exactamente igual al que tendr\u00edamos si contratamos un hosting en internet.</p> <p>La utilidad de esto\u2026 que cada uno busque su justificaci\u00f3n\u2026 si est\u00e1is intentando montar un blog y no sab\u00e9is muy bien como os va a salir la cosa pues\u2026 es una estupenda plataforma para las diversas pruebas, y sobre todo barata porqu\u00e9 no os costar\u00e1 nada.</p> <p>Tambi\u00e9n lo pod\u00e9is enfocar desde el \u00e1mbito lectivo, un servidor de WordPress en local, que cuesta poco (y hoy en d\u00eda hay que justificar muy mucho los gastos en educaci\u00f3n), que no necesita salida a internet por lo tanto no hay esos posibles \u201cpeligros\u201d de la chiquiller\u00eda en clase\u2026 etc.</p> <p>WordPress no es m\u00e1s que un software escrito en php que necesita para poderse ejecutar de una base de datos, un int\u00e9rprete de php y un servidor web.</p> <p>Para la base de datos, tradicionalmente se ha empleado MySQL, un motor de base de datos bastante ligero a la par que robusto, si bien, este software no es todo lo \u201clibre\u201d que deber\u00eda pues pertenece desde hace un tiempo al todopoderoso Oracle.</p> <p>As\u00ed que en su lugar, en vez de emplear MySQL vamos a utilizar el motor de base de datos MariaDB, este software est\u00e1 desarrollado por la propia gente que en su momento realiz\u00f3 MySQL, as\u00ed que no existen muchas diferencias\u2026</p> <p>En cuanto al servidor web, lo normal es encontrarse con Apache, si bien este servidor web en las Raspberry presenta un comportamiento un tanto \u201cgast\u00f3n\u201d con los recursos, as\u00ed que en su lugar emplearemos NginX el cual se desenvuelve bastante mejor para estos menesteres.</p>"},{"location":"rpi_wordpress1/#necesidades-de-disco-previas","title":"Necesidades de disco previas","text":"<p>Para generar los directorios donde se guardar\u00e1n muchos de los ficheros de esta instalaci\u00f3n necesitamos m\u00e1s disco del que dispone la tarjeta SD de nuestra m\u00e1quina.</p> <p>Puesto que tenemos instalada un pendrive USB vamos a emplearlo para montar sobre el un nuevo FS (FileSystem) que se corresponda con <code>/srv</code>\u00a0.</p> <p>Por defecto en nuestra instalaci\u00f3n ese directorio ya existe y est\u00e1 montado sobre el FS ra\u00edz del sistema:</p> <p>[root@Jarvis srv]# df -kh . S.ficheros Tama\u00f1o Usados Disp Uso% Montado en /dev/root 3,0G 676M 2,2G 24% /</p> <p>[root@Jarvis srv]# ls -lR .: total 8 dr-xr-xr-x 2 root ftp 4096 jun 4 2013 ftp drwxr-xr-x 2 root root 4096 jun 4 2013 http</p> <p>Vamos a crear un nuevo sistema de ficheros en la partici\u00f3n que tenemos libre en el USB, movemos el actual directorio a otro nombre, montamos la unidad y devolvemos el directorio, f\u00e1cil\u2026</p> <p>Creamos el sistema de ficheros:</p> <p>[root@Jarvis srv]# mkfs -t ext4 /dev/sdb2</p> <p>mke2fs 1.42.9 (28-Dec-2013) Etiqueta del sistema de ficheros= OS type: Linux Tama\u00f1o del bloque=4096 (bit\u00e1cora=2) Tama\u00f1o del fragmento=4096 (bit\u00e1cora=2) Stride=0 blocks, Stripe width=0 blocks 293184 inodes, 1170688 blocks 58534 blocks (5.00%) reserved for the super user Primer bloque de datos=0 N\u00famero m\u00e1ximo de bloques del sistema de ficheros=1199570944 36 bloque de grupos 32768 bloques por grupo, 32768 fragmentos por grupo 8144 nodos-i por grupo Respaldo del superbloque guardado en los bloques: 32768, 98304, 163840, 229376, 294912, 819200, 884736 Allocating group tables: hecho Escribiendo las tablas de nodos-i: hecho Creating journal (32768 blocks):hecho Escribiendo superbloques y la informaci\u00f3n contable del sistema de ficheros: hecho</p> <p>Editamos el fichero <code>/etc/fstab</code>\u00a0para configurar el punto de montaje</p> <p>[root@Jarvis srv]# vi /etc/fstab /dev/sdb1 /BCK ext4 defaults 0 0 /dev/sdb2 /srv ext4 defaults 0 0</p> <p>A\u00f1adimos la segunda l\u00ednea que vemos.</p> <p>Salvamos el fichero pero a\u00fan no montamos la unidad pues el directorio existe y tiene contenido.</p> <p>Copiamos el directorio srv con otro nombre y lo volvemos a crear para poder hacer el montaje de la unidad USB</p> <p>[root@Jarvis /]# cd / [root@Jarvis /]# mv /srv /srv2 [root@Jarvis /]# mkdir /srv</p> <p>Ahora podemos montar la partici\u00f3n sin problemas y volver a mover el directorio donde estaba</p> <p>[root@GumPI /]# mount -a [root@GumPI /]# mv /srv2/* /srv [root@GumPI /]# rmdir srv2</p> <p>Y para comprobar que lo hemos hecho bien</p> <p>[root@Jarvis ~]# cd /srv [root@Jarvis srv]# df -kh . S.ficheros Tama\u00f1o Usados Disp Uso% Montado en /dev/sdb2 4,3G 9,0M 4,1G 1% /srv</p> <p>[root@Jarvis srv]# ls -lR .: total 24 dr-xr-xr-x 2 root ftp 4096 jun 4 2013 ftp drwxr-xr-x 2 root root 4096 jun 4 2013 http drwx------ 2 root root 16384 mar 25 19:03 lost+found</p>"},{"location":"rpi_wordpress1/#instalamos-el-servidor-web","title":"Instalamos el servidor WEB","text":"<p>Con nuestro gestor de paquetes, <code>pacman</code> vamos a instalar el servidor web</p> <p>[root@Jarvis ~]# pacman -S nginx resolviendo dependencias... verificando conflictos... Paquetes (1): nginx-1.4.7-1 Tama\u00f1o Total de Descarga: 0,25 MiB Tama\u00f1o Total Instalado: 0,71 MiB :: \u00bfContinuar con la instalaci\u00f3n? [S/n] S :: Recuperando paquetes ... nginx-1.4.7-1-armv6h 251,9 KiB 913K/s 00:00      [##################################################] 100% (1/1) verificando llaves en el llavero           [##################################################] 100% (1/1) verificando la integridad de los paquetes  [##################################################] 100% (1/1) cargando los archivos del paquete...       [##################################################] 100% (1/1) verificando conflictos entre archivos      [##################################################] 100% (1/1) verificando el espacio disponible en disco [##################################################] 100% (1/1) instalando nginx                           [##################################################] 100%</p> <p>Lo arrancamos para ver si todo funciona correctamente</p> <p>[root@Jarvis ~]# systemctl start nginx</p> <p>Y comprobamos que se puede acceder al servidor por el puerto web por defecto que es el 80.</p> <p>Nos conectamos a nuestra Raspberry 192.168.1.20 (por aqu\u00ed tu IP) (http://192.168.1.20) y debemos ver un</p> <p>mensaje tal que as\u00ed:</p> <p>Welcome to nginx!</p> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to nginx.org.</p> <p>Commercial support is available at nginx.com.</p> <p>Thank you for using nginx.</p> <p>Perfecto, ya tenemos el servidor web instalado, ahora instalamos PHP y PHP-FPM (es el FastCGI para PHP) y terminamos de configurarlo.</p>"},{"location":"rpi_wordpress1/#instalamos-php-y-php-fpm","title":"Instalamos PHP y PHP-FPM","text":"<p>Como siempre, con <code>pacman</code>\u00a0, solicitamos a los repositorios los paquetes oficiales.</p> <p>[root@Jasrvis ~]# pacman -S php php-fpm resolviendo dependencias... verificando conflictos... Paquetes (3): libxml2-2.9.1-5 php-5.5.10-1 php-fpm-5.5.10-1 Tama\u00f1o Total de Descarga: 5,46 MiB Tama\u00f1o Total Instalado: 29,19 MiB :: \u00bfContinuar con la instalaci\u00f3n? [S/n] S :: Recuperando paquetes ... libxml2-2.9.1-5-armv6h 1090,4 KiB 2030K/s 00:01      [##################################################] 100% php-5.5.10-1-armv6h 2,8 MiB 3,16M/s 00:01            [##################################################] 100% php-fpm-5.5.10-1-armv6h 1675,1 KiB 4,21M/s 00:00     [##################################################] 100% (3/3) verificando llaves en el llavero               [##################################################] 100% (3/3) verificando la integridad de los paquetes      [##################################################] 100% (3/3) cargando los archivos del paquete...           [##################################################] 100% (3/3) verificando conflictos entre archivos          [##################################################] 100% (3/3) verificando el espacio disponible en disco     [##################################################] 100% (1/3) instalando libxml2                             [##################################################] 100% (2/3) instalando php                                 [##################################################] 100% (3/3) instalando php-fpm                             [##################################################] 100%</p> <p>Arrancamos PHP-FPM (FastGCI Process Manager, donde FastCGI es un Gateway para la conexi\u00f3n de procesos web\u2026)</p> <p>[root@Jarvis ~]# systemctl start php-fpm</p> <p>Y configuramos el conjunto NginX PHP y PHP-FPM</p> <p>Por defecto NginX busca los ficheros en <code>/usr/share/nginx/html</code> , vamos a modificar su configuraci\u00f3n b\u00e1sica para que los busque en /srv/http, ajustamos tambi\u00e9n algunos par\u00e1metros para la gesti\u00f3n de los lobs de errores, compresi\u00f3n de mensajes\u2026 etc.</p> <p>Editamos <code>/etc/nginx/nginx.conf</code>\u00a0, borramos todo su contenido y lo reemplazamos con este</p>"},{"location":"rpi_wordpress1/#user-html","title":"user html;","text":"<p>worker_processes 1; error_log /var/log/error_nginx.log; events {         worker_connections 1024;        } http {       include mime.types;       default_type application/octet-stream;       sendfile on;       keepalive_timeout 15;       gzip on;       gzip_comp_level 1;       server {             listen 80;             server_name localhost;             location ~ \\.php {                               root /srv/http;                               fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;                               fastcgi_index index.php;                               fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;                               include /etc/nginx/fastcgi_params;                               }             location / {                         root /srv/http;                         index index.php;                         }             error_page 500 502 503 504 /50x.html;             location = /50x.html {                                   root /usr/share/nginx/html;                                   }       } }</p> <p>Ahora creamos un fichero de prueban en php para ver si nuestra instalaci\u00f3n y configuraci\u00f3n son correctas, as\u00ed que editamos el fichero <code>/srv/http/index.php</code>\u00a0y usamos este contenido:</p> Prueba\"; ?&gt;  <p>Reiniciamos tanto NginX como PHP-FPM y probamos a ver si se ve esta prueba</p> <p>[root@Jarvis ~]# systemctl restart nginx php-fpm</p> <p>Probamos el acceso nuevamente a nuestro servidor web en la url http://192.168.1.20 (por aqu\u00ed tu IP) (http://192.168.1.20)</p> <p>Y tendremos que ver como el navegador web nos muestra en texto \u201cPrueba\u201d que se genera con ese sencillo .php de \u00edndice que hemos creado.</p> <p>S\u00f3lo nos falta dejar estos dos servicios activos en los futuros inicios de m\u00e1quina mediante los comandos:</p> <p>[root@Jarvis ~]# systemctl enable nginx [root@Jarvis ~]# systemctl enable php-fpm</p>"},{"location":"rpi_wordpress1/#instalacion-y-configuracion-de-mariadb","title":"Instalaci\u00f3n y configuraci\u00f3n de MariaDB","text":"<p>Vamos con la base de datos.</p> <p>Nuestro amigo pacman, lo volvemos a emplear para la descarga del software, como vemos las posibles dependencias del mismo, librer\u00edas, clientes, etc, se instalan junto con el software.</p> <p>Prestad especial atenci\u00f3n al final de la instalaci\u00f3n por que este paquete ofrece una documentaci\u00f3n \u201cpost-instalaci\u00f3n\u201d muy buena, de los pocos\u2026</p> <p>[root@ Jarvis ~]# pacman -S mariadb resolviendo dependencias... verificando conflictos... Paquetes (4): libaio-0.3.109-7 libmariadbclient-5.5.36-1 mariadb-clients-5.5.36-1 mariadb-5.5.36-1 Tama\u00f1o Total de Descarga: 16,32 MiB Tama\u00f1o Total Instalado: 141,79 MiB :: \u00bfContinuar con la instalaci\u00f3n? [S/n] S :: Recuperando paquetes ... libaio-0.3.109-7-armv6h 4,1 KiB 4,03M/s 00:00            [##################################################] 100% libmariadbclient-5.5.36-1-armv6h 6,6 MiB 2,46M/s 00:03   [##################################################] 100% mariadb-clients-5.5.36-1-armv6h 799,6 KiB 1221K/s 00:01  [##################################################] 100% mariadb-5.5.36-1-armv6h 8,9 MiB 2,04M/s 00:04            [##################################################] 100% (4/4) verificando llaves en el llavero                   [##################################################] 100% (4/4) verificando la integridad de los paquetes          [##################################################] 100% (4/4) cargando los archivos del paquete...               [##################################################] 100% (4/4) verificando conflictos entre archivos              [##################################################] 100% (4/4) verificando el espacio disponible en disco         [##################################################] 100% (1/4) instalando libaio                                  [##################################################] 100% (2/4) instalando libmariadbclient                        [##################################################] 100% (3/4) instalando mariadb-clients                         [##################################################] 100% (4/4) instalando mariadb                                 [##################################################] 100% Installing MariaDB/MySQL system tables in '/var/lib/mysql' ... OK Filling help tables... OK To start mysqld at boot time you have to copy support-files/mysql.server to the right place for your system PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER ! To do so, start the server, then issue the following commands: '/usr/bin/mysqladmin' -u root password 'new-password' '/usr/bin/mysqladmin' -u root -h Jarvis password 'new-password' Alternatively you can run: '/usr/bin/mysql_secure_installation' which will also give you the option of removing the test databases and anonymous user created by default. This is strongly recommended for production servers.</p> <p>See the MariaDB Knowledgebase at http://mariadb.com/kb or the MySQL manual for more instructions. You can start the MariaDB daemon with: cd '/usr' ; /usr/bin/mysqld_safe --datadir='/var/lib/mysql' You can test the MariaDB daemon with mysql-test-run.pl cd '/usr/mysql-test' ; perl mysql-test-run.pl Please report any problems at http://mariadb.org/jira The latest information about MariaDB is available at http://mariadb.org/. You can find additional information about the MySQL part at: http://dev.mysql.com Support MariaDB development by buying support/new features from SkySQL Ab. You can contact us about this at sales@skysql.com.</p> <p>Alternatively consider joining our community based development effort: http://mariadb.com/kb/en/contributing-to-the-mariadb-project/</p> <p>If you are migrating from MySQL, don't forget to run 'mysql_upgrade' after mysqld.service restart.</p> <p>Iniciamos el gestor de base de datos, para poder configurarlo, este inicio tarda un poquito, no asustarse y correr a reiniciar el servidor</p> <p><code>[root@Jarvis ~]# systemctl start mysqld</code></p> <p>Y ahora realizamos la configuraci\u00f3n inicial de MariaDB empleando el script que esta documentaci\u00f3n del paquete nos indica (hay un error en el script pero no afecta a su funcionalidad, lleva ah\u00ed desde hace varios meses\u2026):</p> <p>[root@Jarvis ~]# /usr/bin/mysql_secure_installation /usr/bin/mysql_secure_installation: l\u00ednea 379: find_mysql_client: no se encontr\u00f3 la orden NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB SERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY!</p> <p>In order to log into MariaDB to secure it, we'll need the current password for the root user. If you've just installed MariaDB, and you haven't set the root password yet, the password will be blank, so you should just press enter here. Enter current password for root (enter for none):  OK, successfully used password, moving on... <p>Setting the root password ensures that nobody can log into the MariaDB root user without the proper authorisation. Set root password? [Y/n] Y New password:  Re-enter new password:  Password updated successfully! Reloading privilege tables.. ... Success! <p>By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without having to have a user account created for them. This is intended only for testing, and to make the installation go a bit smoother. You should remove them before moving into a production environment. Remove anonymous users? [Y/n] Y ... Success!</p> <p>Normally, root should only be allowed to connect from 'localhost'. This ensures that someone cannot guess at the root password from the network. Disallow root login remotely? [Y/n] Y ... Success!</p> <p>By default, MariaDB comes with a database named 'test' that anyone can access. This is also intended only for testing, and should be removed before moving into a production environment. Remove test database and access to it? [Y/n] Y - Dropping test database... ... Success!</p> <ul> <li>Removing privileges on test database... ... Success!</li> </ul> <p>Reloading the privilege tables will ensure that all changes made so far will take effect immediately. Reload privilege tables now? [Y/n] Y ... Success!</p> <p>Cleaning up... All done! If you've completed all of the above steps, your MariaDB installation should now be secure. Thanks for using MariaDB!</p> <p>Y una vez configurado todo, reincidamos el gestor de base de datos y lo habilitamos en el arranque de m\u00e1quina</p> <p>[root@Jarvis ~]# systemctl restart mysqld [root@Jarvis ~]# systemctl enable mysqld</p>"},{"location":"rpi_wordpress1/#administracion-de-mariadb-con-phpmyadmin","title":"Administraci\u00f3n de MariaDB con PHPMyAdmin","text":"<p>Para hacer la vida un poco m\u00e1s f\u00e1cil, y poder administrar la base de datos de una manera algo m\u00e1s gr\u00e1fica, instalamos el paquete de administraci\u00f3n basado en Php.</p> <p>M\u00e1s que nada por que en cualquier Hosting de pago es el paquete que con casi toda seguridad os encontrar\u00e9is, as\u00ed que vamos a tratar de poner aqu\u00ed todo igual.</p> <p>Recurrimos a pacman una vez m\u00e1s:</p> <p>[root@Jarvis ~]# pacman -S phpmyadmin php-mcrypt resolviendo dependencias... verificando conflictos... Paquetes (3): libmcrypt-2.5.8-3 php-mcrypt-5.5.10-1 phpmyadmin-4.1.11-1 Tama\u00f1o Total de Descarga: 4,78 MiB Tama\u00f1o Total Instalado: 26,21 MiB :: \u00bfContinuar con la instalaci\u00f3n? [S/n] S :: Recuperando paquetes ... libmcrypt-2.5.8-3-armv6h 64,9 KiB 319K/s 00:00       [##################################################] 100% php-mcrypt-5.5.10-1-armv6h 9,9 KiB 236K/s 00:00      [##################################################] 100% phpmyadmin-4.1.11-1-any 4,7 MiB 2,52M/s 00:02        [##################################################] 100% (3/3) verificando llaves en el llavero               [##################################################] 100% (3/3) verificando la integridad de los paquetes      [##################################################] 100% (3/3) cargando los archivos del paquete...           [##################################################] 100% (3/3) verificando conflictos entre archivos          [##################################################] 100% (3/3) verificando el espacio disponible en disco     [##################################################] 100% (1/3) instalando phpmyadmin                          [##################################################] 100% Check http://wiki.archlinux.org/index.php/Phpmyadmin for details. Dependencias opcionales para phpmyadmin php-mcrypt: to use phpMyAdmin internal authentication [pendiente] (2/3) instalando libmcrypt                           [##################################################] 100% (3/3) instalando php-mcrypt                          [##################################################] 100%</p> <p>Por defecto la instalaci\u00f3n se realiza dentro de la ruta <code>/usr/share/webapps/phpMyAdmin</code>\u00a0y nuestro servidor web no est\u00e1 configurado para arrancar nada all\u00ed.</p> <p>La soluci\u00f3n, pues f\u00e1cil, creamos un enlace de es ruta en nuestra ruta de servidor http y as\u00ed podremos ejecutarlo.</p> <p>Se podr\u00eda mover/copiar el contenido de esa webapps a la carpeta, pero de cara a actualizaciones del paquete es m\u00e1s recomendable hacerlo por enlace.</p> <p>[root@Jarvis ~]# ln -s /usr/share/webapps/phpMyAdmin /srv/http/phpMyAdmin</p> <p>Y ahora tenemos que volver a modificar el fichero de configuraci\u00f3n del servidor web <code>/etc/nginx/nginx.conf</code>\u00a0, este ser\u00eda el contenido del fichero que debemos tener:</p>"},{"location":"rpi_wordpress1/#user-html_1","title":"user html;","text":"<p>worker_processes 1; error_log /var/log/error_nginx.log; events {     worker_connections 1024;     } http {     include mime.types;     default_type application/octet-stream;     sendfile on;     keepalive_timeout 15;     gzip on;     gzip_comp_level 1;     server {         listen 80;     server_name localhost;     location ~ \\.php {             root /srv/http;             fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;             fastcgi_index index.php;             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;             include /etc/nginx/fastcgi_params;             }     location /phpmyadmin {             rewrite ^/* /phpMyAdmin last;             }     location / {             root /srv/http;             index index.php;             }     error_page 500 502 503 504 /50x.html;     location = /50x.html {     root /usr/share/nginx/html;             }     } }</p> <p>Tambi\u00e9n debemos modificar el fichero /etc/php/php.ini realizando estos cambios que a continuaci\u00f3n se detallan:</p> <p>Localizamos la l\u00ednea que dice <code>open_basedir=</code>\u00a0y ponemos esto:</p> <p><code>open_basedir= /srv/http/:/home/:/tmp/:/usr/share/pear/:/usr/share/webapps/:/etc/webapps/</code></p> <p>Localizamos estas l\u00edneas, y las descomentamos, esto es, quitamos el ; del principio de la l\u00ednea (pulsando la letra x)</p> <p>extension=mysqli.so extension=mysql.so extension=mcrypt.so mysqli.allow_local_infile = On</p> <p>Como hemos realizado modificaciones que afectan a la configuraci\u00f3n del servidor web y del FastCGI de PHP, vamos a reiniciar ambos procesos</p> <p>[root@Jarvis nginx]# systemctl restart nginx php-fpm</p> <p>Y probamos para ver si hemos conseguido instalar todo bien.</p> <p>Para esto, entramos a la url http://192.168.1.20/phpmyadmin (por aqu\u00ed tu IP) (http://192.168.1.20/phpmyadmin)</p> <p>... Continuar\u00e1 ...</p>"},{"location":"rpi_wordpress2/","title":"Instalando una RaspberryPI todo uso\u2026 en 2014 (parte 7) \u2013 pr\u00e1ctico 1 \u2013 WordPress II","text":""},{"location":"rpi_wordpress2/#y-ahora-si-por-fin-instalamos-wordpress","title":"Y ahora si, por fin, instalamos WordPress!!","text":"<p>Ha costado un poquito pero ya est\u00e1, ahora lo m\u00e1s r\u00e1pido, montar WordPress, as\u00ed que descargamos el paquete directamente de wordpress.org y los descomprimimos:</p> <p>[root@Jarvis http]# cd /srv [root@Jarvis http]# wget http://wordpress.org/latest.tar.gz --2014-03-25 22:55:41-- http://wordpress.org/latest.tar.gz Resolviendo wordpress.org (wordpress.org)... 66.155.40.249, 66.155.40.250 Conectando con wordpress.org (wordpress.org)[66.155.40.249]:80... conectado. Petici\u00f3n HTTP enviada, esperando respuesta... 200 OK Longitud: 5869727 (5,6M) [application/x-gzip] Grabando a: \u201clatest.tar.gz\u201d 100%[======================================================================================================&gt;] 5.869.727 1,49MB/s en 4,4s 2014-03-25 22:55:46 (1,28 MB/s) - \u201clatest.tar.gz\u201d guardado [5869727/5869727] [root@Jarvis srv]# tar -xvf latest.tar.gz</p> <p>Solo nos resta hacer la configuraci\u00f3n de WordPress, podemos echar mano de esta gu\u00eda relativa a la instalaci\u00f3n de un WP en 5 minutos.</p> <p>Los pasos son estos:</p> <p>1.- Creamos una base de datos para nuestro WordPress, f\u00e1cil, tenemos phpMyAdmin, nos conectamos y creamos.</p> <p>2.- Creamos un usuario para esta base de datos con permisos para crear/modificar objetos (nos aparece como \u201cOtorgar todos los privilegios para la base de datos \"WordPress\u201d)</p> <p>Estos dos primeros pasos se pueden realizar, por supuesto, por l\u00ednea de comando, las sentencias ser\u00edan estas:</p> <p>[root@Jarvis http]# mysql -u root -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 8 Server version: 5.5.36-MariaDB-log MariaDB Server Copyright (c) 2000, 2014, Oracle, Monty Program Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [(none)]&gt; CREATE DATABASE blog; Query OK, 1 row affected (0.01 sec) MariaDB [(none)]&gt; CREATE USER wordpressuser@localhost; Query OK, 0 rows affected (0.00 sec) MariaDB [(none)]&gt; SET PASSWORD FOR wordpressuser@localhost=PASSWORD('clave'); Query OK, 0 rows affected (0.01 sec) MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON blog.* TO wordpressuser@localhost IDENTIFIED BY 'clave'; Query OK, 0 rows affected (0.00 sec) MariaDB [(none)]&gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0.01 sec) MariaDB [(none)]&gt; exit Bye [root@Jarvis http]#</p> <p>3.- Creamos el fichero wp-config.php a partir del fichero de ejemplos</p> <p>[root@Jarvis wordpress]# cp /srv/wordpress/wp-config-sample.php /srv/wordpress/wp-config.php</p> <p>4.- Editar este fichero <code>/srv/wordpress/wp-config.php</code> para modificar la informaci\u00f3n de la conexi\u00f3n a la base de datos que hemos creado en el punto 1, nombre de la base de datos, usuario y clave.</p> <p>define('DB_NAME', 'blog'); /** MySQL database username */ define('DB_USER', 'wordpressuser'); /** MySQL database password */ define('DB_PASSWORD', 'clave');</p> <p>5.- Copiamos la instalaci\u00f3n/configuraci\u00f3n a su lugar bajo <code>/srv/http</code></p> <p>[root@Jarvis srv]# cd /srv/wordpress [root@Jarvis wordpress]# cp -pr * /srv/http</p> <p>Por \u00faltimo, la url para arrancar la configuraci\u00f3n final de WordPress es esta: http://192.168.1.20/wp-admin/install.php</p> <p>Por si lo quieres tener en castellano, puedes hacerlo de dos maneras, bajando el paquete completo de instalaci\u00f3n en castellano, que siempre va un poco por detr\u00e1s en las nuevas versiones que las americanas, e instalando tal y como hemos hecho pero a partir de ese fichero, y la otra opci\u00f3n es poner tan s\u00f3lo el fichero de lenguaje, que es lo que te cuento a continuaci\u00f3n y que hasta ahora no he conseguido que funcione al 100% y siempre termina apareciendo alg\u00fan que otro literal en otro idioma\u2026</p> <p>Debes bajar la traducci\u00f3n de WordPress para la versi\u00f3n en concreto que tienes, ahora mismo es la 3.8.1.</p> <p>La descarga la hacemos as\u00ed</p> <p>[root@Jarvis srv]# cd /srv [root@Jarvis srv]# wget http://es.wordpress.org/wordpress-3.8.1-es_ES.zip</p> <p>Debemos extraer de ese zip el fichero wordpress/wp-content/languages/es_ES.mo para copiarlo dentro de nuestra instalaci\u00f3n en la misma ruta.</p> <p>[root@Jarvis srv]# unzip -jqq wordpress-3.8.1-es_ES.zip wordpress/wp-content/languages/es_ES.mo [root@Jarvis srv]# mkdir /srv/http/wp-content/languages [root@Jarvis srv]# mv /srv/es_ES.mo /srv/http/wp-content/languages</p> <p>En \u00faltimo lugar debemos modificar el fichero de configuraci\u00f3n de WordPress para que indicar el lenguaje que vamos a emplear, editando el fichero /srv/http/wp-config.php y modificando esta l\u00ednea para que quede as\u00ed:</p> <p>define('WPLANG', 'es_ES');</p>"},{"location":"rpi_wordpress2/#acceso-desde-el-exterior-de-nuestra-red","title":"Acceso desde el exterior de nuestra red","text":"<p>Si queremos acceder a nuestro servidor desde fuera de nuestra red debemos habilitar el acceso a el en nuestro router.</p> <p>Pero claro, a no ser que tengas direcci\u00f3n IP fija tendremos problemas cuando el router obtenga una nueva direcci\u00f3n IP.</p> <p>Para solucionar esto podemos emplear un servicio de DDNS , que en algunos router incluso podremos configurar y activar all\u00ed.</p> <p>En cualquier caso, aqu\u00ed os pongo las sencillas l\u00edneas para poder instalar el cliente de DDNS de www.no-ip.com</p> <p>Primero necesitamos tener un registro en ese servicio antes de continuar.</p> <p>Luego tendremos que a\u00f1adir un host (nombre con el que queremos que se conozca nuestro servicio en la red) con un dominio de los gratuitos que nos ofrece.</p> <p>En este caso hemos registrado gumcampi.no-ip.org</p> <p>Ahora tenemos que abrir en nuestro router el acceso a nuestra m\u00e1quina por el puerto que vamos a emplear, en este caso la Ip de la red local 192.168.1.20 que ser\u00e1 accedido por el puerto 80. As\u00ed que sencillo, entramos a Nat-VirtualServers y a\u00f1adimos para esta IP y este puerto la entrada correspondiente.</p> <p>Una nota al margen, los router ya emplean ese puerto, el 80 para la web de administraci\u00f3n, normalmente cuando indicamos que vamos a emplear ese puerto para algo el router suele modificar su propio puerto y se lo lleva al 8080.</p> <p>Y ahora instalamos el cliente de no-ip.</p> <p>[root@Jarvis ~]# pacman -S noip</p> <p>resolviendo dependencias... verificando conflictos... Paquetes (1): noip-2.1.9-5 Tama\u00f1o Total de Descarga: 0,02 MiB Tama\u00f1o Total Instalado: 0,07 MiB :: \u00bfContinuar con la instalaci\u00f3n? [S/n] S :: Recuperando paquetes ... noip-2.1.9-5-armv6h 15,6 KiB 129K/s 00:00        [################################################] 100% (1/1) verificando llaves en el llavero           [################################################] 100% (1/1) verificando la integridad de los paquetes  [################################################] 100% (1/1) cargando los archivos del paquete...       [################################################] 100% (1/1) verificando conflictos entre archivos      [################################################] 100% (1/1) verificando el espacio disponible en disco [################################################] 100% (1/1) instalando noip                            [################################################] 100%</p> <p>Before running noip2 you must configure it. To configure noip2 run the command \"noip2 -C -Y\"</p> <p>Como vemos el propio instalador nos indica la forma de realizar la configuraci\u00f3n as\u00ed que le hacemos caso:</p> <p>[root@Jarvis ~]# noip2 -C -Y Auto configuration for Linux client of no-ip.com. Please enter the login/email string for no-ip.com antonioXXXX@gmail.com Please enter the password for user 'antonioXXXX@gmail.com' ****** Only one host [gumcampi.no-ip.org] is registered to this account. It will be used. Please enter an update interval:[30] 30 Do you wish to run something at successful update?[N] (y/N) N New configuration file '/etc/no-ip2.conf' created.</p> <p>Y estando instalado y configurado tan s\u00f3lo nos falta ejecutarlo y dejarlo activo para posteriores arranques autom\u00e1ticos del sistema</p> <p>[root@Jarvis ~]# systemctl start noip2 [root@Jarvis ~]# systemctl enable noip2 ln -s '/usr/lib/systemd/system/noip2.service' '/etc/systemd/system/multi-user.target.wants/noip2.service'</p> <p>Ahora podr\u00e9is conectar desde el exterior siempre bajo esa direcci\u00f3n.</p> <p>Eso si, os aviso, si prob\u00e1is esto desde vuestra casa es posible que os falle, ya que la mayor\u00eda de los router no os dejar\u00e1n salir al exterior para volver a entrar a la red local, es lo que se denomina NAT Loopback y son pocos los routers que lo soportan.</p> <p>Y una \u00faltima cosa, de cara a la configuraci\u00f3n de WordPress, si acced\u00e9is as\u00ed, recordad que ten\u00e9is que indicar en la p\u00e1gina de configuraci\u00f3n del site (http://192.168.1.20/wp-admin/options-general.php) el nombre del dominio por DDNS en vez de la direcci\u00f3n ip Local.</p>"},{"location":"tec_actionsec2/","title":"Env\u00eda ficheros desde Github a EC2 con actions","text":"<p>En la \u00faltima entrada comentaba lo que Github nos permite hacer con sus actions, pod\u00e9is leerlo aqu\u00ed Github Actions</p> <p>Hoy os traigo un caso de uso pr\u00e1ctico y real para estas actions, que d\u00edas atr\u00e1s nos surgi\u00f3 cuando quer\u00edamos subir a una m\u00e1quia EC2 un fichero que se genera y almacena en nuestro repositorio en Github, de manera que cuando ese proceso/action de publicaci\u00f3n terminase, ante el evento push en el repo se enviase al servidor EC2.</p> <p>El diagrama m\u00e1s o menos ser\u00eda esto:</p> <p></p> <p>Ante el evento push del fichero (a parte de las acciones de SAST, auditor\u00edas, etc) se va a levantar un runner el cual realizar\u00e1 los siguientes pasos:</p> <p>1.- Instala y configura AWS Cli Para esto emplea los secretos que contienen los valores para Access Key y Secret Access Key de una identidad IAM creada con el fin de poder habilitar y revokar \u00fanicamente accesos en el security group de la instancia EC2. En el repositorio github pod\u00e9is ver un ejemplo de la pol\u00edtica necesaria para realizar estas labores.</p> <p>2.- Obtiene la direcci\u00f3n publica del runner Cada vez que se ejecute la action ser\u00e1 en una m\u00e1quina distinta dentro del pool de m\u00e1quinas que pueda tener Github.com, y se presentar\u00e1 a internet con una Ip diferente. Con este sencillo comando sacamos la direcci\u00f3n p\u00fablica de la m\u00e1quina runner con la que llegaremos a nuestra instancia EC2</p> <p><code>wget -qO- https://ipecho.net/plain</code></p> <p>El valor obtenido lo pasamos a una variable de entorno para poder utilizarlo m\u00e1s adelante.</p> <p>3.- Autorizamos el acceso por el puerto ssh tcp/22 en nuestra instancia EC2 Puesto que la copia del fichero desde nuestro repositorio ser\u00e1 por scp debemos poder llegar a la m\u00e1quina desde el runner (que no tiene ip fija pero ya tenemos su ip p\u00faiblica en el paso anterior) y para esto tenemos que permitir el tr\u00e1fico en el security group de esa instancia, que de otra manera est\u00e1 por defecto no permitido. <pre><code>aws ec2 authorize-security-group-ingress --group-id \"${{ secrets.AWS_SGWEB }}\" --protocol tcp --port \"${{ secrets.AWS_VMPORT }}\" --cidr \"${{ env.IP_RUNNER }}/32\"\n</code></pre></p> <p>4.- Preparamos el runner Para poder lanzar la conexi\u00f3n scp hacia nuestra instancia EC2 debemos tener la clave ssh en el runner, y configurarla donde corresponde, y todo de manera que no quede rastro en los logs de actividad de la action, as\u00ed que recurrimos a los secrets de las actions para que aparezca en el log como  \"***\". El c\u00f3digo es este, creamos los directorios necesarios, permisos en directorios y ficheros y volcamos el pem. <pre><code>config\\_ssh=~/.ssh/config\nkeyfile=~/.ssh/Key.pem\nmkdir ~/.ssh &amp;&amp; echo -e \"ExitOnForwardFailure=yes\\\\nStrictHostKeyChecking=no\" &gt; ${config_ssh} &amp;&amp; chmod 600 ${config_ssh}\necho \"${AWSKEY}\" &gt; ${keyfile} &amp;&amp; chmod 600 ${keyfile}\n</code></pre></p> <p>5.- Descargamos el repositorio sobre el runner Con esta action (estamos usando la action de checkout propia de github) descargamos en el runner el contenido de nuestro repo, de manera que tendremos el fichero/os a copiar sobre nuestra instancia EC2. Es como hacer un git clone reponame de toda la vida <pre><code>uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8\n</code></pre></p> <p>6.- Copiamos los ficheros de local (runner, repo clonado) hacia la instancia EC2 Un simple scp recursivo hacia un directorio de despliegues, con un usuario en el servidor no privilegiado. Todos los datos que no queramos que se pinten en los logs es mejor pasarlos como secretos, ya que as\u00ed s\u00f3lo veremos \"***\" en el log. <pre><code>scp -r -i ${keyfile} $GITHUB\\_WORKSPACE/data/* ${AWSVMUSERNAME}@${AWSVMFQDN}:/${AWSDESTINATION} 2&gt;/dev/null\n</code></pre> 7.- Y por \u00faltimo, si o si, sea cual sea el resultado, cerramos el security group Y as\u00ed cerramos el acceso del runner evitando dejar accesos permitidos que con el tiempo pueden ser dif\u00edciles de manejar. La clave de este paso es ese <code>if: always()</code>que har\u00e1 que se ejecute siempre sea cual sea el estado de los pasos anteriores de nuestra action. <pre><code>if: always()\nrun: aws ec2 revoke-security-group-ingress --group-id \"${{ secrets.AWS_SGWEB }}\" --protocol tcp --port \"${{ secrets.AWS_VMPORT }}\" --cidr \"${{ env.IP_RUNNER }}/32\"\n</code></pre> Hasta aqu\u00ed ser\u00eda la parte github, pero claro, el fichero/os se quedan en un directorio aislado, con un usuario no privilegiado y hay que moverlo de alguna manera a su ruta definitiva. En mi caso era moverlo al documentroot de un webserver, y emple\u00e9 el siguiente script que se encarga de monitorizar la actividad sobre el directorio de deployments y mover los ficheros, cambios de usuarios/groups y permisos:</p> <pre><code>#!/usr/bin/env bash\n\nuser=www-data\ngroup=www-data\norigin=/Deployments\ntarget=/var/www/&lt;virtualhost\\_documentroot&gt;/\n\n# Check if another instance of script is running\n[[ $(lsof -t $0| wc -l) &gt; 1 ]] &amp;&amp; echo \"At least one of $0 is running\" &amp;&amp; exit\n\nwhile true\ndo\n  #Inotify Trigger\n  inotifywait -r --exclude \"(swp|swx)\"  -e close_write -t 300 ${origin}\n  cp -pr ${origin}/* ${target}\n  chown -R ${user}:${group} ${target}\n  sleep 30\ndone\n</code></pre> <p>Espero os guste y os sea de utilidad.</p> <p>Todo el c\u00f3digo y documentaci\u00f3n de esta entrada la encontr\u00e1is en: https://github.com/antoniohernan/putfiles2ec2</p>","tags":["aws","command-line","ec2","github"]}]}